[
    {
        "instruction":"Find all tasks related to customer ABC Inc. and summarize them.",
        "output":"[\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"created_by\",\n        \"argument_value\": [\"DEVU-123\", \"DEVU-456\"]\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"summarize_objects\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"objects\",\n        \"argument_value\": \"$$PREV[0]\"\n   \u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0]\n\u00a0\u00a0}\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the customer CustomerABC and create action items from the search results.",
        "output":"[\n  {\n    \"tool_name\": \"search_object_by_name\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"query\",\n        \"argument_value\": \"CustomerABC\"\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"create_actionable_tasks_from_text\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"text\",\n        \"argument_value\": \"$$PREV[0]\"\n   \u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0]\n\u00a0\u00a0}\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Retrieve work items with the highest severity blocker and prioritize them.",
        "output":"[\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"ticket.severity\",\n        \"argument_value\": \"blocker\"\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"prioritize_objects\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"objects\",\n        \"argument_value\": \"$$PREV[0]\"\n   \u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0]\n\u00a0\u00a0}\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items in the testing stage that are related to parts PART-1 and PART-2 and summarize them.",
        "output":"[\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"stage.name\",\n        \"argument_value\": \"testing\"\n      },\n      {\n        \"argument_name\": \"applies_to_part\",\n        \"argument_value\": [\"PART-1\", \"PART-2\"]\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"summarize_objects\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"objects\",\n        \"argument_value\": \"$$PREV[0]\"\n   \u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0]\n\u00a0\u00a0}\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve work items associated with the Rev organization Rev-789 and tickets that need a response, and create a summary.",
        "output":"[\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"ticket.rev_org\",\n        \"argument_value\": \"Rev-789\"\n      },\n      {\n        \"argument_name\": \"ticket.needs_response\",\n        \"argument_value\": true\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"summarize_objects\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"objects\",\n        \"argument_value\": \"$$PREV[0]\"\n   \u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0]\n\u00a0\u00a0}\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items with medium severity and owned by user USER-789, and then prioritize them.",
        "output":"[\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"ticket.severity\",\n        \"argument_value\": \"medium\"\n      },\n      {\n        \"argument_name\": \"owned_by\",\n        \"argument_value\": \"USER-789\"\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"prioritize_objects\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"objects\",\n        \"argument_value\": \"$$PREV[0]\"\n   \u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0]\n\u00a0\u00a0}\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve work items in the design stage and owned by USER-456, then create action items from the results.",
        "output":"[\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"stage.name\",\n        \"argument_value\": \"design\"\n      },\n      {\n        \"argument_name\": \"owned_by\",\n        \"argument_value\": \"USER-456\"\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"create_actionable_tasks_from_text\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"text\",\n        \"argument_value\": \"$$PREV[0]\"\n   \u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0]\n\u00a0\u00a0}\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current sprint ID and then find work items in that sprint.",
        "output":"[\n  {\n    \"tool_name\": \"get_sprint_id\",\n    \"arguments\": []\n  },\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"sprint_id\",\n        \"argument_value\": \"$$PREV[0]\"\n   \u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0]\n\u00a0\u00a0}\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to ProjectX and summarize them.",
        "output":"[\n  {\n    \"tool_name\": \"search_object_by_name\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"query\",\n        \"argument_value\": \"ProjectX\"\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"summarize_objects\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"objects\",\n        \"argument_value\": \"$$PREV[0]\"\n   \u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0]\n\u00a0\u00a0}\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items with PROD-123 and PROD-456 in the applies_to_part filter and have p1 or p2 priority, and then create action items from the results.",
        "output":"[\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"applies_to_part\",\n        \"argument_value\": [\"PROD-123\", \"PROD-456\"]\n      },\n      {\n        \"argument_name\": \"issue.priority\",\n        \"argument_value\": [\"p1\", \"p2\"]\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"create_actionable_tasks_from_text\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"text\",\n        \"argument_value\": \"$$PREV[0]\"\n   \u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0]\n\u00a0\u00a0}\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get a list of work items with task type and owned by USER-789 and USER-456.",
        "output":"[\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": []\n      {\n        \"argument_name\": \"type\",\n        \"argument_value\": \"task\"\n      },\n      {\n        \"argument_name\": \"owned_by\",\n        \"argument_value\": [\"USER-789\", \"USER-456\"]\n   \u00a0\u00a0\u00a0}\n\u00a0\u00a0\u00a0\u00a0]\n\u00a0\u00a0}\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to CustomerXYZ, find the work items related to the search results, and then summarize them.",
        "output":"[\n  {\n    \"tool_name\": \"search_object_by_name\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"query\",\n        \"argument_value\": \"CustomerXYZ\"\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"applies_to_part\",\n        \"argument_value\": \"$$PREV[0]\"\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"summarize_objects\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"objects\",\n        \"argument_value\": \"$$PREV[1]\"\n      }\n    ]\n  }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items with task type and create action items from them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": []\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"task\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": []\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get a list of work items similar to TKT-456 and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": []\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-456\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": []\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items associated with the Rev organizations REV-123 and REV-456 that need a response, and then summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": []\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": [\"REV-123\", \"REV-456\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": True\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": []\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve work items with low severity and owned by USER-123, and then add them to the current sprint.",
        "output":"[\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"ticket.severity\",\n        \"argument_value\": \"low\"\n      },\n      {\n        \"argument_name\": \"owned_by\",\n        \"argument_value\": \"USER-123\"\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"get_sprint_id\",\n    \"arguments\": []\n  },\n  {\n    \"tool_name\": \"add_work_items_to_sprint\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"work_ids\",\n        \"argument_value\": \"$$PREV[0]\"\n      },\n      {\n        \"argument_name\": \"sprint_ids\",\n        \"argument_value\": \"$$PREV[1]\"\n      }\n    ]\n  }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ProjectY,\" find the work items related to the search results, and then prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectY\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current sprint ID and then retrieve work items associated with that sprint and create a summary.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current user's ID and then find all work items owned by that user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve work items associated with a specified sprint ID and then summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"Sprint-123\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to ProductABC, retrieve work items related to the search results, and then add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProductABC\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items with ticket type and associated with ChannelA and ChannelB source channels, then create action items from the results.",
        "output":"[\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"type\",\n        \"argument_value\": \"ticket\"\n      },\n      {\n        \"argument_name\": \"ticket.source_channel\",\n        \"argument_value\": [\"ChannelA\", \"ChannelB\"]\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"create_actionable_tasks_from_text\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"text\",\n        \"argument_value\": \"$$PREV[0]\"\n      }\n    ]\n  }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get a list of work items in the review stage under part PART-456, and then prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"review\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"PART-456\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to CustomerXYZ and retrieve work items associated with the search results, then add them to a specified sprint.\n",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerXYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"Sprint-789\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get work items associated with Issue-123 and Issue-456, and then summarize them. Output:",
        "output":"[\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\"Issue-123\", \"Issue-456\"]\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items with high severity that need a response and owned by USER-789 and USER-456.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": \"high\"\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"USER-789\", \"USER-456\"]\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to ProjectZ, retrieve work items associated with the search results, and then get the current sprint ID.",
        "output":"[\n  {\n    \"tool_name\": \"search_object_by_name\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"query\",\n        \"argument_value\": \"ProjectZ\"\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"applies_to_part\",\n        \"argument_value\": \"$$PREV[0]\"\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"get_sprint_id\",\n    \"arguments\": []\n  }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and then find work items associated with that sprint and have p3 priority.",
        "output":"[\n  {\n    \"tool_name\": \"get_sprint_id\",\n    \"arguments\": []\n  },\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"sprint_id\",\n        \"argument_value\": \"$$PREV[0]\"\n      },\n      {\n        \"argument_name\": \"issue.priority\",\n        \"argument_value\": \"p3\"\n      }\n    ]\n  }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to ProductX, retrieve work items associated with the search results, and then summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProductX\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get work items associated with ChannelC and ChannelD source channels that need a response and have high severity, and then prioritize them.",
        "output":"[\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"ticket.source_channel\",\n        \"argument_value\": [\"ChannelC\", \"ChannelD\"]\n      },\n      {\n        \"argument_name\": \"ticket.severity\",\n        \"argument_value\": [\"high\"]\n      },\n      {\n        \"argument_name\": \"ticket.needs_response\",\n        \"argument_value\": true\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"prioritize_objects\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"objects\",\n        \"argument_value\": \"$$PREV[0]\"\n      }\n    ]\n  }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items of type issue owned by USER-456 and have p2 priority, and then create action items from them.",
        "output":"[\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"type\",\n        \"argument_value\": \"issue\"\n      },\n      {\n        \"argument_name\": \"owned_by\",\n        \"argument_value\": \"USER-456\"\n      },\n      {\n        \"argument_name\": \"issue.priority\",\n        \"argument_value\": \"p2\"\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"create_actionable_tasks_from_text\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"text\",\n        \"argument_value\": \"$$PREV[0]\"\n      }\n    ]\n  }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to ProjectA, retrieve work items associated with the search results, and add them to a specified sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectA\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"Sprint-456\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items in the planning stage under part PART-789 owned by USER-123 and create action items from them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"planning\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"PART-789\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"USER-123\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user's ID and then find all work items of type \"task\" owned by that user.",
        "output":"[\n  {\n    \"tool_name\": \"who_am_i\",\n    \"arguments\": []\n  },\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"type\",\n        \"argument_value\": \"task]\n      },\n      {\n        \"argument_name\": \"owned_by\",\n        \"argument_value\": \"$$PREV[0]\"\n      }\n    ]\n  }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"Customer123,\" retrieve work items associated with the search results, and summarize them. Output:",
        "output":"[\n  {\n    \"tool_name\": \"search_object_by_name\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"query\",\n        \"argument_value\": \"Customer123\"\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"summarize_objects\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"objects\",\n        \"argument_value\": \"$$PREV[0]\"\n      }\n    ]\n  }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items with \"p1\" priority and \"p3\" priority and create action items from them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p1\", \"p3\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Get work items associated with \"ProjectB\" and \"ProjectC,\" and then prioritize them.\r",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": [\"ProjectB\", \"ProjectC\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Search for objects related to \"Part123,\" retrieve work items associated with the search results, and add them to a specified sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Part123\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"Sprint-789\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items with the keyword \"urgent\" in their descriptions and add them to the current sprint.",
        "output":"[\n    {\n        \"tool_name\": \"search_object_by_name\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"query\",\n                \"argument_value\": \"urgent\"\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"get_sprint_id\",\n        \"arguments\": []\n    },\n    {\n        \"tool_name\": \"add_work_items_to_sprint\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"work_ids\",\n                \"argument_value\": \"$$PREV[0]\"\n            },\n            {\n                \"argument_name\": \"sprint_id\",\n                \"argument_value\": \"$$PREV[1]\"\n            }\n        ]\n    }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Retrieve work items associated with the Rev organization \"REV-123\" and owned by the user \"DEVU-789.\" Summarize them and prioritize by severity.",
        "output":"[\n    {\n        \"tool_name\": \"works_list\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"ticket.rev_org\",\n                \"argument_value\": \"REV-123\"\n            },\n            {\n                \"argument_name\": \"owned_by\",\n                \"argument_value\": \"DEVU-789\"\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"summarize_objects\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"objects\",\n                \"argument_value\": \"$$PREV[0]\"\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"prioritize_objects\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"objects\",\n                \"argument_value\": \"$$PREV[1]\"\n            }\n        ]\n    }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve all issue work items that need a response and are associated with the Rev organization REV-789",
        "output":"[\n    {\n        \"tool_name\": \"works_list\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"ticket.needs_response\",\n                \"argument_value\": true\n            },\n            {\n                \"argument_name\": \"ticket.rev_org\",\n                \"argument_value\": \"REV-789\"\n            },\n            {\n                \"argument_name\": \"type\",\n                \"argument_value\": \"issue\"\n            }\n        ]\n    }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items with specific part IDs PART-003 and PART-004 that are owned by the user DEVU-123.",
        "output":"[\n    {\n        \"tool_name\": \"works_list\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"applies_to_part\",\n                \"argument_value\": [\"PART-003\", \"PART-004\"]\n            },\n            {\n                \"argument_name\": \"owned_by\",\n                \"argument_value\": \"DEVU-123\"\n            }\n        ]\n    }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items of type ticket that need a response and are associated with the Rev organization REV-456. Summarize these tickets and prioritize them.",
        "output":"[\n    {\n        \"tool_name\": \"works_list\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"ticket.needs_response\",\n                \"argument_value\": true\n            },\n            {\n                \"argument_name\": \"ticket.rev_org\",\n                \"argument_value\": \"REV-456\"\n            },\n            {\n                \"argument_name\": \"type\",\n                \"argument_value\": \"ticket\"\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"summarize_objects\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"objects\",\n                \"argument_value\": \"$$PREV[0]\"\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"prioritize_objects\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"objects\",\n                \"argument_value\": \"$$PREV[1]\"\n            }\n        ]\n    }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve work items with a specific part ID PART-005 and a priority of p2. Summarize these work items and create actionable tasks from the summary.",
        "output":"[\n    {\n        \"tool_name\": \"works_list\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"applies_to_part\",\n                \"argument_value\": \"PART-005\"\n            },\n            {\n                \"argument_name\": \"issue.priority\",\n                \"argument_value\": \"p2\"\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"summarize_objects\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"objects\",\n                \"argument_value\": \"$$PREV[0]\"\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"create_actionable_tasks_from_text\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"text\",\n                \"argument_value\": \"$$PREV[1]\"\n            }\n        ]\n    }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve work items that are similar to TKT-789 and add them to the current sprint. Get the ID of the current sprint and prioritize the added work items.",
        "output":"[\n    {\n        \"tool_name\": \"get_similar_work_item\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"work_id\",\n                \"argument_value\": \"TKT-789\"\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"add_work_items_to_sprint\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"work_ids\",\n                \"argument_value\": \"$$PREV[0]\"\n            },\n            {\n                \"argument_name\": \"sprint_id\",\n                \"argument_value\": \"$$PREV[1]\"\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"get_sprint_id\",\n        \"arguments\": []\n    },\n    {\n        \"tool_name\": \"prioritize_objects\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"objects\",\n                \"argument_value\": \"$$PREV[0]\"\n            }\n        ]\n    }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve work items with a specific part ID PART-004 that are in the in-progress stage. Summarize them and create actionable tasks from the summary.",
        "output":"[\n    {\n        \"tool_name\": \"works_list\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"applies_to_part\",\n                \"argument_value\": \"PART-004\"\n            },\n            {\n                \"argument_name\": \"stage.name\",\n                \"argument_value\": \"in-progress\"\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"summarize_objects\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"objects\",\n                \"argument_value\": \"$$PREV[0]\"\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"create_actionable_tasks_from_text\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"text\",\n                \"argument_value\": \"$$PREV[1]\"\n            }\n        ]\n    }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Retrieve work items with a specific part ID PART-006 and prioritize them by severity.",
        "output":"[\n    {\n        \"tool_name\": \"works_list\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"applies_to_part\",\n                \"argument_value\": \"PART-006\"\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"prioritize_objects\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"objects\",\n                \"argument_value\": \"$$PREV[0]\"\n            }\n        ]\n    }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve work items associated with the Rev organization REV-123 that need a response and are of priority p2. Summarize them.",
        "output":"[\n    {\n        \"tool_name\": \"works_list\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"ticket.rev_org\",\n                \"argument_value\": \"REV-123\"\n            },\n            {\n                \"argument_name\": \"ticket.needs_response\",\n                \"argument_value\": true\n            },\n            {\n                \"argument_name\": \"issue.priority\",\n                \"argument_value\": \"p2\"\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"summarize_objects\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"objects\",\n                \"argument_value\": \"$$PREV[0]\"\n            }\n        ]\n    }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items in the \"design\" stage owned by \"USER-789\" and have \"p2\" priority, and then get the current sprint ID.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"design\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"USER-789\"\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": \"p2\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"Part456,\" retrieve work items associated with the search results, and summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Part456\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get work items with \"medium\" severity and associated with \"ChannelX\" and \"ChannelY\" source channels, and then create action items from them.\n",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"medium\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.source_channel\",\r\n        \"argument_value\": [\"ChannelX\", \"ChannelY\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ProjectD,\" retrieve work items associated with the search results, and add them to a specified sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectD\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"Sprint-999\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items of type \"task\" and owned by \"USER-123,\" and then retrieve the ID of the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"task\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"USER-123\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  }\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get work items in the \"development\" stage under part \"PART-789\" and owned by \"USER-456\" and \"USER-789,\" and then summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"development\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"PART-789\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"USER-456\", \"USER-789\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"Part789,\" retrieve work items associated with the search results, and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Part789\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items with \"p0\" priority and \"p1\" priority and owned by \"USER-123,\" and then create action items from them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p0\", \"p1\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"USER-123\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user's ID and then find all work items of type \"issue\" owned by that user and have \"p3\" priority.",
        "output":"[\n  {\n    \"tool_name\": \"who_am_i\",\n    \"arguments\": []\n  },\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"type\",\n        \"argument_value\": \"issue\"\n      },\n      {\n        \"argument_name\": \"owned_by\",\n        \"argument_value\": \"$$PREV[0]\"\n      },\n      {\n        \"argument_name\": \"issue.priority\",\n        \"argument_value\": \"p3\"\n      }\n    ]\n  }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ProductY,\" retrieve work items associated with the search results, and add them to a specified sprint.\r",
        "output":"[\n  {\n    \"tool_name\": \"search_object_by_name\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"query\",\n        \"argument_value\": \"ProductY\"\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"add_work_items_to_sprint\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"work_ids\",\n        \"argument_value\": \"$$PREV[0]\"\n      },\n      {\n        \"argument_name\": \"sprint_id\",\n        \"argument_value\": \"Sprint-123\"\n      }\n    ]\n  }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items with \"p2\" priority owned by \"USER-123,\" retrieve the current sprint ID, and then add them to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": \"p2\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"USER-123\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Search for objects related to \"PartXYZ,\" retrieve work items associated with the search results, and create action items from them.\r",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"PartXYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items with \"p0\" priority and \"p1\" priority, retrieve the current sprint ID, and then add them to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p0\", \"p1\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user's ID, find all work items with \"high\" severity owned by that user, and create action items from them.",
        "output":"[\n  {\n    \"tool_name\": \"who_am_i\",\n    \"arguments\": []\n  },\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"ticket.severity\",\n        \"argument_value\": \"high\"\n      },\n      {\n        \"argument_name\": \"owned_by\",\n        \"argument_value\": \"$$PREV[0]\"\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"create_actionable_tasks_from_text\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"text\",\n        \"argument_value\": \"$$PREV[1]\"\n      }\n    ]\n  }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Get the current user's ID, find all work items in the \"development\" stage, owned by that user, and have \"p1\" priority.\r",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"development\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p1\"]\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ComponentX,\" retrieve work items associated with the search results, and add them to a specified sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ComponentX\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"Sprint-456\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items in the \"testing\" stage owned by \"USER-789\" and have \"p0\" priority, and then get the current sprint ID.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"testing\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"USER-789\"\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": \"p0\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ProductA,\" retrieve work items associated with the search results, and summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProductA\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items with \"p1\" priority and \"p3\" priority and owned by \"USER-123,\" and then create action items from them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p1\", \"p3\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"USER-123\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user's ID and then find all work items of type \"ticket\" associated with \"REV-123.\"",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"ticket\"\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": \"REV-123\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get work items with \"low\" severity and associated with \"email\" source channel, and then create action items from them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": \"low\"\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.source_channel\",\r\n        \"argument_value\": \"email\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ComponentY,\" retrieve work items associated with the search results, and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ComponentY\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items with \"p0\" priority and \"p2\" priority and create action items from them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p0\", \"p2\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items with \"medium\" severity and associated with \"chat\" source channel, and then summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": \"medium\"\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.source_channel\",\r\n        \"argument_value\": \"chat\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"CustomerXYZ,\" retrieve work items associated with the search results, and add them to a specified sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerXYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"Sprint-789\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get work items associated with \"OrganizationA,\" and then summarize them.\r",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": \"OrganizationA\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ProjectC,\" retrieve work items associated with the search results, and create action items from them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectC\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items in the \"in-progress\" stage under part \"PART-789,\" owned by \"USER-456,\" and have \"p2\" priority, and then prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"in-progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"PART-789\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"USER-456\"\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": \"p2\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user's ID and then find all work items of type \"task\" owned by that user and have \"p3\" priority.\r",
        "output":"[\n  {\n    \"tool_name\": \"who_am_i\",\n    \"arguments\": []\n  },\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"type\",\n        \"argument_value\": [\"task\"]\n      },\n      {\n        \"argument_name\": \"owned_by\",\n        \"argument_value\": \"$$PREV[0]\"\n      },\n      {\n        \"argument_name\": \"issue.priority\",\n        \"argument_value\": \"p3\"\n      }\n    ]\n  }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ProductX,\" retrieve work items associated with the search results, and add them to a specified sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProductX\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"Sprint-123\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve all tasks assigned to users in the 'Development' team.",
        "output":"[]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items created in the last 24 hours.",
        "output":"[]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find the project details for the project named 'Alpha Project.",
        "output":"[]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the total number of unresolved issues in the system.",
        "output":"[]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize the status of all issues in the Review stage for part PROJ-789",
        "output":"[\n   {\n      \"tool_name\": \"works_list\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"stage.name\",\n            \"argument_value\": \"Review\"\n         },\n         {\n            \"argument_name\": \"applies_to_part\",\n            \"argument_value\": \"PROJ-789\"\n         }\n      ]\n   },\n   {\n      \"tool_name\": \"summarize_objects\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"objects\",\n            \"argument_value\": \"$$PREV[0]\"\n         }\n      ]\n   }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for issues with the label CustomerFeedback and create tasks for actionable insights.",
        "output":"[\n   {\n      \"tool_name\": \"search_object_by_name\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"query\",\n            \"argument_value\": \"CustomerFeedback\"\n         }\n      ]\n   },\n   {\n      \"tool_name\": \"create_actionable_tasks_from_text\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"text\",\n            \"argument_value\": \"$$PREV[0]\"\n         }\n      ]\n   }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint.",
        "output":"[\n   {\n      \"tool_name\": \"get_sprint_id\",\n      \"arguments\": []\n   }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all high-priority issues reported by the user Bob in the last month and prioritize them",
        "output":"[\n   {\n      \"tool_name\": \"works_list\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"issue.priority\",\n            \"argument_value\": \"high\"\n         },\n         {\n            \"argument_name\": \"created_by\",\n            \"argument_value\": \"Bob\"\n         }\n      ]\n   },\n   {\n      \"tool_name\": \"prioritize_objects\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"objects\",\n            \"argument_value\": \"$$PREV[0]\"\n         }\n      ]\n   }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Generate a summary of the most recent comments on tasks related to ProjectY",
        "output":"[\n   {\n      \"tool_name\": \"search_object_by_name\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"query\",\n            \"argument_value\": \"ProjectY\"\n         }\n      ]\n   },\n   {\n      \"tool_name\": \"summarize_objects\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"objects\",\n            \"argument_value\": \"$$PREV[0]\"\n         }\n      ]\n   }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve a list of tasks that were last modified by the user Charlie",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"last_modified_by\",\r\n            \"argument_value\": \"Charlie\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": \"task\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve all tasks assigned to the user John in the In Progress stage.",
        "output":"[\n   {\n      \"tool_name\": \"works_list\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"owned_by\",\n            \"argument_value\": \"John\"\n         },\n         {\n            \"argument_name\": \"stage.name\",\n            \"argument_value\": \"In Progress\"\n         },\n         {\n            \"argument_name\": \"type\",\n            \"argument_value\": \"task\"\n         }\n      ]\n   }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all issues in the To Do stage.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"stage.name\",\r\n            \"argument_value\": \"To Do\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all high-priority issues reported by user Bob",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"high\"\r\n         },\r\n         {\r\n            \"argument_name\": \"created_by\",\r\n            \"argument_value\": \"Bob\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all issues in the Testing stage",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"stage.name\",\r\n            \"argument_value\": \"Testing\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for all tasks reported by user David",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"created_by\",\r\n            \"argument_value\": \"David\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": \"task\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks that are not assigned to any user",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"unassigned\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": \"task\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all issues in the In Progress stage",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"stage.name\",\r\n            \"argument_value\": \"In Progress\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the sprint for the user's current iteration.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Generate a summary of tasks with the label Bug",
        "output":"[\r\n         {\r\n            \"argument_name\": \"labels\",\r\n            \"argument_value\": [\"Bug\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": \"task\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all issues in the Review stage.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"stage.name\",\r\n            \"argument_value\": \"Review\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for all tasks reported by user George",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"created_by\",\r\n            \"argument_value\": \"George\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": \"task\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks that are not assigned to any user",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"unassigned\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": \"task\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks assigned to user Ivy in the In Progress stage.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"Ivy\"\r\n         },\r\n         {\r\n            \"argument_name\": \"stage.name\",\r\n            \"argument_value\": \"In Progress\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": \"task\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve work items similar to FEAT-789",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_similar_work_item\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_id\",\r\n            \"argument_value\": \"FEAT-789\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for an object with the name Customer123",
        "output":"[\n   {\n      \"tool_name\": \"search_object_by_name\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"query\",\n            \"argument_value\": \"Customer123\"\n         }\n      ]\n   }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text Task description",
        "output":"[\r\n   {\r\n      \"tool_name\": \"create_actionable_tasks_from_text\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"text\",\r\n            \"argument_value\": \"Task description\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current user",
        "output":"[\r\n   {\r\n      \"tool_name\": \"who_am_i\",\r\n      \"arguments\": []\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the To Do stage owned by user DEVU-789",
        "output":"[\n   {\n      \"tool_name\": \"works_list\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"stage.name\",\n            \"argument_value\": [\"To Do\"]\n         },\n         {\n            \"argument_name\": \"owned_by\",\n            \"argument_value\": [\"DEVU-789\"]\n         }\n      ]\n   }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Filter work items with priority P0 and owned by user DEVU-789",
        "output":"[\n   {\n      \"tool_name\": \"works_list\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"issue.priority\",\n            \"argument_value\": [\"P0\"]\n         },\n         {\n            \"argument_name\": \"owned_by\",\n            \"argument_value\": [\"DEVU-789\"]\n         }\n      ]\n   }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve work items with severity High and in the Review stage",
        "output":"[\n   {\n      \"tool_name\": \"works_list\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"ticket.severity\",\n            \"argument_value\": [\"High\"]\n         },\n         {\n            \"argument_name\": \"stage.name\",\n            \"argument_value\": [\"Review\"]\n         }\n      ]\n   }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize work items with the label Feature",
        "output":"[\n   {\n      \"tool_name\": \"works_list\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"labels\",\n            \"argument_value\": [\"Feature\"]\n         }\n      ]\n   },\n   {\n      \"tool_name\": \"summarize_objects\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"objects\",\n            \"argument_value\": \"$$PREV[0]\"\n         }\n      ]\n   }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items assigned to user DEVU-123 with priority P2",
        "output":"[\n   {\n      \"tool_name\": \"works_list\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"owned_by\",\n            \"argument_value\": [\"DEVU-123\"]\n         },\n         {\n            \"argument_name\": \"issue.priority\",\n            \"argument_value\": [\"P2\"]\n         }\n      ]\n   }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize work items with severity Medium and in the In Progress stage",
        "output":"[\n   {\n      \"tool_name\": \"works_list\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"ticket.severity\",\n            \"argument_value\": [\"Medium\"]\n         },\n         {\n            \"argument_name\": \"stage.name\",\n            \"argument_value\": [\"In Progress\"]\n         }\n      ]\n   },\n   {\n      \"tool_name\": \"summarize_objects\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"objects\",\n            \"argument_value\": \"$$PREV[0]\"\n         }\n      ]\n   }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items with severity Low and owned by user DEVU-456",
        "output":"[\n   {\n      \"tool_name\": \"works_list\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"ticket.severity\",\n            \"argument_value\": [\"Low\"]\n         },\n         {\n            \"argument_name\": \"owned_by\",\n            \"argument_value\": [\"DEVU-456\"]\n         }\n      ]\n   }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items related to Rev organizations REV-456 and REV-789",
        "output":"[\n   {\n      \"tool_name\": \"works_list\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"issue.rev_orgs\",\n            \"argument_value\": [\"REV-456\", \"REV-789\"]\n         }\n      ]\n   }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items with priority P1 and associated with Rev organization REV-123",
        "output":"[\n   {\n      \"tool_name\": \"works_list\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"issue.priority\",\n            \"argument_value\": [\"P1\"]\n         },\n         {\n            \"argument_name\": \"issue.rev_orgs\",\n            \"argument_value\": [\"REV-123\"]\n         }\n      ]\n   }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve work items similar to TKT-789 and created by user DEVU-456",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_similar_work_item\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_id\",\r\n            \"argument_value\": \"TKT-789\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"created_by\",\r\n            \"argument_value\": [\"DEVU-456\"]\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the Testing stage with severity Medium",
        "output":"[\n   {\n      \"tool_name\": \"works_list\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"stage.name\",\n            \"argument_value\": [\"Testing\"]\n         },\n         {\n            \"argument_name\": \"ticket.severity\",\n            \"argument_value\": [\"Medium\"]\n         }\n      ]\n   }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize work items with priority P0 and in the Done stage",
        "output":"[\n   {\n      \"tool_name\": \"works_list\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"issue.priority\",\n            \"argument_value\": [\"P0\"]\n         },\n         {\n            \"argument_name\": \"stage.name\",\n            \"argument_value\": [\"Done\"]\n         }\n      ]\n   },\n   {\n      \"tool_name\": \"summarize_objects\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"objects\",\n            \"argument_value\": \"$$PREV[0]\"\n         }\n      ]\n   }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items assigned to user DEVU-123 with priority P2",
        "output":"[\n   {\n      \"tool_name\": \"works_list\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"owned_by\",\n            \"argument_value\": [\"DEVU-123\"]\n         },\n         {\n            \"argument_name\": \"issue.priority\",\n            \"argument_value\": [\"P2\"]\n         }\n      ]\n   }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":null,
        "output":null,
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all tasks related to customer ABC Inc. and summarize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ABC Inc.\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all high-priority issues from the current sprint.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p0\", \"p1\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Create tasks from a recent team meeting's minutes and prioritize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Team meeting minutes...\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve tasks owned by a specific user and add them to the ongoing sprint.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"USR-456\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Identify similar work items to a specific ticket and summarize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-789\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all high priority tasks related to parts \"FEAT-123\" and \"PROD-456\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"issue.priority\",\r\n                \"argument_value\": [\"p0\", \"p1\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": [\"FEAT-123\", \"PROD-456\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items similar to \"ENH-789\" and create actionable tasks from the retrieved data.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"ENH-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"create_actionable_tasks_from_text\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"text\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all tickets from the source channel \"email\" and summarize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.source_channel\",\r\n                \"argument_value\": [\"email\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Prioritize tasks similar to \"PROD-987\" and add them to the current sprint.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"PROD-987\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"prioritize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"add_work_items_to_sprint\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_ids\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"sprint_id\",\r\n                \"argument_value\": \"$$PREV[2]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the customer \"CustomerX\" and list their associated Rev organizations.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"CustomerX\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.rev_org\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Identify tasks with severity \"blocker\" and add them to the current sprint.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"blocker\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"add_work_items_to_sprint\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_ids\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"sprint_id\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve work items similar to \"FEAT-456\" and summarize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"FEAT-456\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for the user \"DEVU-789\" and list all work items created by them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"created_by\",\r\n                \"argument_value\": [\"DEVU-789\"]\r\n            }\r\n        ]\r\n    }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current user's ID and find all tasks owned by them in the \"development\" stage.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"development\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Prioritize tasks with severity \"high\" and add them to the sprint named \"Sprint-XYZ\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"high\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"prioritize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"add_work_items_to_sprint\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_ids\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"sprint_id\",\r\n                \"argument_value\": \"Sprint-XYZ\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items in the \"validation\" stage associated with Rev organization \"REV-456\" and summarize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"validation\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.rev_org\",\r\n                \"argument_value\": [\"REV-456\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the part \"ENH-789\" and list their associated source channels.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"ENH-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items similar to \"PROD-123\" and create actionable tasks from them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"PROD-123\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"create_actionable_tasks_from_text\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"text\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Identify tasks owned by the current user and with the priority \"p1\".",
        "output":" [\n    {\n        \"tool_name\": \"who_am_i\",\n        \"arguments\": []\n    },\n    {\n        \"tool_name\": \"works_list\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"owned_by\",\n                \"argument_value\": \"$$PREV[0]\"\n            },\n            {\n                \"argument_name\": \"issue.priority\",\n                \"argument_value\": [\"p1\"]\n            }\n        ]\n    }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the part \"CAPL-789\" and list their associated Rev organizations.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"CAPL-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tasks created by \"DEVU-456\" with severity \"medium\" and add them to the sprint named \"NextSprint\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"created_by\",\r\n                \"argument_value\": [\"DEVU-456\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"medium\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\":\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve tasks from the Rev organization \"REV-789\" with severity \"low\" and add them to the current sprint.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.rev_org\",\r\n                \"argument_value\": [\"REV-789\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"low\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"add_work_items_to_sprint\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_ids\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"sprint_id\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for tasks associated with the part \"ENH-123\" and summarize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"ENH-123\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Prioritize tasks similar to \"TKT-456\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-456\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"prioritize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user's ID and find tasks owned by them in the \"testing\" stage.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"testing\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find objects related to the customer \"Cust456\" and list their associated Rev organizations.",
        "output":" [\n    {\n        \"tool_name\": \"search_object_by_name\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"query\",\n                \"argument_value\": \"Cust456\"\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"works_list\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"ticket.rev_org\",\n                \"argument_value\": \"$$PREV[0]\"\n            }\n        ]\n    }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the part \"PROD-789\" and list their associated source channels.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"PROD-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tasks owned by the current user with priority \"p2\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"issue.priority\",\r\n                \"argument_value\": [\"p2\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for tasks similar to \"FEAT-789\" and summarize them.",
        "output":" [\n    {\n        \"tool_name\": \"get_similar_work_item\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"work_id\",\n                \"argument_value\": \"FEAT-789\"\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"summarize_objects\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"objects\",\n                \"argument_value\": \"$$PREV[0]\"\n            }\n        ]\n    }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Identify tasks with severity \"medium\" and add them to the current sprint.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"medium\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"add_work_items_to_sprint\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_ids\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"sprint_id\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tasks in the \"design\" stage associated with Rev organization \"REV-789\" and summarize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"design\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.rev_org\",\r\n                \"argument_value\": [\"REV-789\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Retrieve the current user's ID and find tasks owned by them with severity \"high\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"high\"]\r\n            }\r\n        ]\r\n    }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the part \"CAPL-123\" and list their associated Rev organizations.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"CAPL-123\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tasks owned by the current user in the \"implementation\" stage.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"implementation\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get tasks similar to \"PROD-456\" and create actionable tasks from them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"PROD-456\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"create_actionable_tasks_from_text\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"text\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List tasks with severity \"blocker\" and add them to the sprint named \"CriticalFix\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"blocker\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"add_work_items_to_sprint\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_ids\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"sprint_id\",\r\n                \"argument_value\": \"CriticalFix\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve tasks similar to \"TKT-789\" and summarize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for tasks related to the part \"PROD-123\" and list their associated source channels.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"PROD-123\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Prioritize tasks with severity \"high\" and add them to the current sprint.",
        "output":" [\n    {\n        \"tool_name\": \"works_list\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"ticket.severity\",\n                \"argument_value\": [\"high\"]\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"prioritize_objects\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"objects\",\n                \"argument_value\": \"$$PREV[0]\"\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"get_sprint_id\",\n        \"arguments\": []\n    },\n    {\n        \"tool_name\": \"add_work_items_to_sprint\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"work_ids\",\n                \"argument_value\": \"$$PREV[1]\"\n            },\n            {\n                \"argument_name\": \"sprint_id\",\n                \"argument_value\": \"$$PREV[2]\"\n            }\n        ]\n    }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find objects related to the customer \"Cust789\" and list their associated Rev organizations.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"Cust789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.rev_org\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get tasks similar to \"FEAT-456\" and create actionable tasks from them.",
        "output":" [\n    {\n        \"tool_name\": \"get_similar_work_item\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"work_id\",\n                \"argument_value\": \"FEAT-456\"\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"create_actionable_tasks_from_text\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"text\",\n                \"argument_value\": \"$$PREV[0]\"\n            }\n        ]\n    }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user's ID and find tasks owned by them in the \"design\" stage.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"design\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Search for objects related to the part \"CAPL-456\" and list their associated Rev organizations.",
        "output":" [\n    {\n        \"tool_name\": \"search_object_by_name\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"query\",\n                \"argument_value\": \"CAPL-456\"\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"works_list\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"applies_to_part\",\n                \"argument_value\": \"$$PREV[0]\"\n            }\n        ]\n    }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tasks owned by the current user with priority \"p1\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"issue.priority\",\r\n                \"argument_value\": [\"p1\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for tasks similar to \"PROD-789\" and summarize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"PROD-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List tasks with severity \"medium\" and source channel \"email\" associated with the Rev organization \"REV-456\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"medium\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.source_channel\",\r\n                \"argument_value\": [\"email\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.rev_org\",\r\n                \"argument_value\": [\"REV-456\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Find tasks similar to \"TKT-987\" and create actionable tasks from them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-987\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"create_actionable_tasks_from_text\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"text\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the part \"CAPL-789\" and summarize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"CAPL-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Prioritize tasks owned by the current user with severity \"high\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"high\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"prioritize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user's ID and list tasks owned by them in the \"testing\" stage.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"testing\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find objects related to the customer \"Cust123\" and list their associated Rev organizations.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"Cust123\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.rev_org\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get tasks similar to \"FEAT-789\" and summarize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"FEAT-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Retrieve the current user's ID and find tasks owned by them in the \"design\" stage.",
        "output":" [\n    {\n        \"tool_name\": \"who_am_i\",\n        \"arguments\": []\n    },\n    {\n        \"tool_name\": \"works_list\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"stage.name\",\n                \"argument_value\": [\"design\"]\n            },\n            {\n                \"argument_name\": \"owned_by\",\n                \"argument_value\": \"$$PREV[0]\"\n            }\n        ]\n    }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for tasks similar to \"PROD-789\" and create actionable tasks from them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"PROD-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"create_actionable_tasks_from_text\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"text\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Identify tasks with severity \"low\" and add them to the current sprint.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"low\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"add_work_items_to_sprint\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_ids\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"sprint_id\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the part \"ENH-456\" and list their associated Rev organizations.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"ENH-456\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":": Find tasks owned by the current user with priority \"p2\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"issue.priority\",\r\n                \"argument_value\": [\"p2\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for tasks similar to \"FEAT-123\" and summarize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"FEAT-123\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user's ID and list tasks owned by them in the \"development\" stage.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"development\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find objects related to the part \"PROD-789\" and list their associated Rev organizations.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"PROD-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get tasks similar to \"ENH-123\" and create actionable tasks from them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"ENH-123\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"create_actionable_tasks_from_text\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"text\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Identify tasks with severity \"blocker\" and source channel \"web\" associated with the Rev organization \"REV-789\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"blocker\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.source_channel\",\r\n                \"argument_value\": [\"web\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.rev_org\",\r\n                \"argument_value\": [\"REV-789\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user's ID and list tasks owned by them in the \"review\" stage.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"review\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for tasks similar to \"FEAT-789\" and summarize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"FEAT-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Retrieve the current user's ID and find tasks owned by them in the \"deployment\" stage.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"deployment\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Identify tasks created by user \"DEVU-456\" and prioritize them by severity.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"created_by\",\r\n                \"argument_value\": [\"DEVU-456\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"prioritize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tasks related to the part \"PROD-456\" and summarize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"PROD-456\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks owned by the current user in the \"planning\" stage and add them to the sprint named \"Sprint 1\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"planning\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"add_work_items_to_sprint\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_ids\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"sprint_id\",\r\n                \"argument_value\": \"Sprint 1\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Retrieve the current user's ID and find tasks owned by them that need a response.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.needs_response\",\r\n                \"argument_value\": true\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the part \"FEAT-789\" and list their associated Rev organizations and priorities.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"FEAT-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and retrieve similar tasks to \"TKT-456\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-456\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the customer \"Cust456\" and prioritize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"Cust456\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"prioritize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the customer \"Cust456\" and prioritize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"Cust456\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"prioritize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve tasks similar to \"FEAT-123\" and find their associated Rev organizations.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"FEAT-123\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.rev_org\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Identify tasks with severity \"high\" and add them to the sprint named \"HighPriority\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"high\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"add_work_items_to_sprint\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_ids\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"sprint_id\",\r\n                \"argument_value\": \"HighPriority\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the part \"ENH-789\" and summarize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"ENH-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user's ID and list tasks owned by them with severity \"blocker\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"blocker\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Find tasks similar to \"TKT-123\" and create actionable tasks from them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-123\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"create_actionable_tasks_from_text\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"text\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the part \"CAPL-789\" and list their associated Rev organizations.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"CAPL-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current sprint ID and prioritize tasks similar to \"PROD-789\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"PROD-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"prioritize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user's ID and list tasks owned by them in the \"implementation\" stage.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"implementation\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the customer \"Cust789\" and prioritize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"Cust789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"prioritize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tasks similar to \"FEAT-123\" and prioritize them, then add them to the sprint named \"NextRelease\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"FEAT-123\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"prioritize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"add_work_items_to_sprint\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_ids\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"sprint_id\",\r\n                \"argument_value\": \"NextRelease\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for tasks similar to \"TKT-456\" and create actionable tasks from them, then summarize these tasks.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-456\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"create_actionable_tasks_from_text\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"text\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user's ID and find tasks owned by them with severity \"p1\" in the \"emergency\" stage.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"emergency\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"issue.priority\",\r\n                \"argument_value\": [\"p1\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the part \"PROD-123\" and list their associated Rev organizations and priorities.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"PROD-123\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"issue.priority\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.rev_org\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tasks similar to \"FEAT-789\" and prioritize them, then add them to the sprint named \"FutureRelease\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"FEAT-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"prioritize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n   \r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List tasks with severity \"high\" and owned by user \"DEVU-789\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"high\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": [\"DEVU-789\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current sprint ID and add tasks similar to \"TKT-456\" to it.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-456\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"add_work_items_to_sprint\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_ids\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"sprint_id\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tasks with severity \"blocker\" and source channel \"email\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"blocker\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.source_channel\",\r\n                \"argument_value\": [\"email\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the part \"PROD-789\" and list their associated Rev organizations.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"PROD-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get tasks similar to \"TKT-789\" and create actionable tasks from them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"create_actionable_tasks_from_text\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"text\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Identify tasks owned by the current user with severity \"medium\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"medium\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the part \"ENH-456\" and summarize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"ENH-456\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tasks owned by the current user with priority \"p2\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"issue.priority\",\r\n                \"argument_value\": [\"p2\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for tasks similar to \"FEAT-123\" and summarize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"FEAT-123\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user's ID and list tasks owned by them in the \"deployment\" stage.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"deployment\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tasks with severity \"blocker\" and owned by user \"DEVU-456\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"blocker\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": [\"DEVU-456\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current sprint ID and add tasks similar to \"TKT-789\" to it.",
        "output":" [\n    {\n        \"tool_name\": \"get_sprint_id\",\n        \"arguments\": []\n    },\n    {\n        \"tool_name\": \"get_similar_work_item\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"work_id\",\n                \"argument_value\": \"TKT-789\"\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"add_work_items_to_sprint\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"work_ids\",\n                \"argument_value\": \"$$PREV[1]\"\n            },\n            {\n                \"argument_name\": \"sprint_id\",\n                \"argument_value\": \"$$PREV[0]\"\n            }\n        ]\n    }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tasks with severity \"high\" and source channel \"email\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"high\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.source_channel\",\r\n                \"argument_value\": [\"email\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the part \"ENH-789\" and list their associated Rev organizations.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"ENH-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get tasks similar to \"TKT-123\" and create actionable tasks from them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-123\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"create_actionable_tasks_from_text\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"text\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Identify tasks owned by the current user with severity \"low\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"low\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the part \"PROD-456\" and summarize them.",
        "output":" [\n    {\n        \"tool_name\": \"search_object_by_name\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"query\",\n                \"argument_value\": \"PROD-456\"\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"works_list\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"applies_to_part\",\n                \"argument_value\": \"$$PREV[0]\"\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"summarize_objects\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"objects\",\n                \"argument_value\": \"$$PREV[1]\"\n            }\n        ]\n    }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tasks owned by the current user with priority \"p1\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"issue.priority\",\r\n                \"argument_value\": [\"p1\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for tasks similar to \"FEAT-456\" and summarize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"FEAT-456\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user's ID and list tasks owned by them in the \"development\" stage.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"development\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List tasks with severity \"high\" and owned by user \"DEVU-789\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"high\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": [\"DEVU-789\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current sprint ID and add tasks similar to \"TKT-456\" to it.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-456\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"add_work_items_to_sprint\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_ids\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"sprint_id\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tasks with severity \"blocker\" and source channel \"email\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"blocker\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.source_channel\",\r\n                \"argument_value\": [\"email\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the part \"PROD-789\" and list their associated Rev organizations.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"PROD-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get tasks similar to \"TKT-789\" and create actionable tasks from them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"create_actionable_tasks_from_text\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"text\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Identify tasks owned by the current user with severity \"low\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"low\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the part \"ENH-789\" and summarize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"ENH-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tasks owned by the current user with priority \"p1\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"issue.priority\",\r\n                \"argument_value\": [\"p1\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for tasks similar to \"FEAT-456\" and summarize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"FEAT-456\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user's ID and list tasks owned by them in the \"development\" stage.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"development\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List tasks with severity \"medium\" and owned by user \"DEVU-123\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"medium\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": [\"DEVU-123\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Retrieve the current sprint ID and add tasks similar to \"TKT-789\" to it.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"add_work_items_to_sprint\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_ids\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"sprint_id\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tasks with severity \"high\" and source channel \"chat\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"high\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.source_channel\",\r\n                \"argument_value\": [\"chat\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the part \"PROD-456\" and list their associated Rev organizations.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"PROD-456\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get tasks similar to \"TKT-456\" and create actionable tasks from them.",
        "output":" [\n    {\n        \"tool_name\": \"get_similar_work_item\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"work_id\",\n                \"argument_value\": \"TKT-456\"\n            }\n        ]\n    },\n    {\n        \"tool_name\": \"create_actionable_tasks_from_text\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"text\",\n                \"argument_value\": \"$$PREV[0]\"\n            }\n        ]\n    }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Identify tasks owned by the current user with severity \"low\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"low\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the part \"ENH-123\" and summarize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"ENH-123\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Find tasks owned by the current user with priority \"p1\".",
        "output":" [\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"issue.priority\",\r\n                \"argument_value\": [\"p1\"]\r\n            }\r\n        ]\r\n    }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for tasks similar to \"FEAT-789\" and summarize them.",
        "output":" [\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"FEAT-789\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and prioritize the objects associated with it.",
        "output":" [\r\n        {\r\n            \"tool_name\": \"get_sprint_id\",\r\n            \"arguments\": []\r\n        },\r\n        {\r\n            \"tool_name\": \"prioritize_objects\",\r\n            \"arguments\": [\r\n                {\r\n                    \"argument_name\": \"objects\",\r\n                    \"argument_value\": \"$$PREV[0]\"\r\n                }\r\n            ]\r\n        }\r\n    ]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the part 'CAPL-456' and add those work items to the current sprint",
        "output":" [\r\n        {\r\n            \"tool_name\": \"search_object_by_name\",\r\n            \"arguments\": [\r\n                {\r\n                    \"argument_name\": \"query\",\r\n                    \"argument_value\": \"CAPL-456\"\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"tool_name\": \"add_work_items_to_sprint\",\r\n            \"arguments\": [\r\n                {\r\n                    \"argument_name\": \"work_ids\",\r\n                    \"argument_value\": \"$$PREV[0]\"\r\n                },\r\n                {\r\n                    \"argument_name\": \"sprint_id\",\r\n                    \"argument_value\": \"$$PREV[1]\"\r\n                }\r\n            ]\r\n        }\r\n    ]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tasks with severity 'blocker' associated with the Rev organization 'REV-456",
        "output":"  [\r\n        {\r\n            \"tool_name\": \"works_list\",\r\n            \"arguments\": [\r\n                {\r\n                    \"argument_name\": \"ticket.severity\",\r\n                    \"argument_value\": [\"blocker\"]\r\n                },\r\n                {\r\n                    \"argument_name\": \"ticket.rev_org\",\r\n                    \"argument_value\": [\"REV-456\"]\r\n                }\r\n            ]\r\n        }\r\n    ]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current user and list tasks owned by them in the 'testing' stage",
        "output":"  [\r\n        {\r\n            \"tool_name\": \"who_am_i\",\r\n            \"arguments\": []\r\n        },\r\n        {\r\n            \"tool_name\": \"works_list\",\r\n            \"arguments\": [\r\n                {\r\n                    \"argument_name\": \"owned_by\",\r\n                    \"argument_value\": \"$$PREV[0]\"\r\n                },\r\n                {\r\n                    \"argument_name\": \"stage.name\",\r\n                    \"argument_value\": [\"testing\"]\r\n                }\r\n            ]\r\n        }\r\n    ]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for tasks in the 'development' stage related to parts 'FEAT-789' and summarize them",
        "output":" [\r\n        {\r\n            \"tool_name\": \"works_list\",\r\n            \"arguments\": [\r\n                {\r\n                    \"argument_name\": \"stage.name\",\r\n                    \"argument_value\": [\"development\"]\r\n                },\r\n                {\r\n                    \"argument_name\": \"applies_to_part\",\r\n                    \"argument_value\": [\"FEAT-789\"]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"tool_name\": \"summarize_objects\",\r\n            \"arguments\": [\r\n                {\r\n                    \"argument_name\": \"objects\",\r\n                    \"argument_value\": \"$$PREV[0]\"\r\n                }\r\n            ]\r\n        }\r\n    ]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tasks owned by the current user with severity 'high' and associated with the Rev organization 'REV-789'",
        "output":" [\n        {\n            \"tool_name\": \"who_am_i\",\n            \"arguments\": []\n        },\n        {\n            \"tool_name\": \"works_list\",\n            \"arguments\": [\n                {\n                    \"argument_name\": \"owned_by\",\n                    \"argument_value\": \"$$PREV[0]\"\n                },\n                {\n                    \"argument_name\": \"ticket.severity\",\n                    \"argument_value\": [\"high\"]\n                },\n                {\n                    \"argument_name\": \"ticket.rev_org\",\n                    \"argument_value\": [\"REV-789\"]\n                }\n            ]\n        }\n    ]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Show me all high priority tickets created by user 'USR-123'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p0\", \"p1\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"USR-123\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"What are the issues owned by me in the 'ready for review' stage?",
        "output":" [\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"ready for review\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List tasks related to the customer 'Acme' that need a response.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Acme\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get work items similar to 'PROD-789' and summarize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"PROD-789\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Show me tasks needing response from Rev organization 'REV-456'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": [\"REV-456\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tasks created by user 'USR-987' with medium severity.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"USR-987\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"medium\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find similar work items to 'TKT-123', summarize them, create actionable tasks from the summary, prioritize those tasks, add them to the current sprint, and get the ID of the current sprint.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-123\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[2]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[3]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[5]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items with severity 'blocker' and owned by user 'DEVU-123'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": \"blocker\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"DEVU-123\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize tasks similar to 'task-001' and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"task-001\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"What are the work items in the 'In Progress' stage and need a response?",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"In Progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": []\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'customer123' and create actionable tasks from the results.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"customer123\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add work items with severity 'high' and owned by 'DEVU-123' to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": \"high\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"DEVU-123\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize tasks similar to 'task-002' and create actionable tasks from the summary.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"task-002\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"What are the work items with type 'issue' and severity 'medium'?",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"medium\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current user and return work items owned by that user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"\"Search for objects related to 'part-XYZ' and summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"part-XYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks in the 'To Do' stage owned by user 'DEVU-456'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"To Do\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"DEVU-456\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'client-ABC' and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"client-ABC\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current sprint ID and add tasks with priority 'high' to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"high\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize issues similar to 'issue-XYZ' and create tasks from the summary.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"issue-XYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"What are the work items with severity 'low' created by user 'DEVU-789'?",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"low\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current user and return work items owned by that user with severity 'medium'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"medium\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'project-123' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"project-123\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all tasks in the 'Review' stage.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"Review\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Meeting notes for project-456' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Meeting notes for project-456\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items in the 'Ready for Deployment' stage owned by the current user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"Ready for Deployment\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks with priority 'medium' that need a response.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"medium\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": []\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current user and return work items owned by that user with priority 'high'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"high\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'project-A' and summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"project-A\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Meeting notes for client-XYZ' and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Meeting notes for client-XYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"What are the work items with type 'ticket' and associated with 'Rev-456'?",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"ticket\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": [\"Rev-456\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add issues with severity 'blocker' to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"blocker\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize tasks similar to 'task-003' and create actionable tasks from the summary",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"task-003\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'module-789' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"module-789\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current user and return work items owned by that user with severity 'high' and type 'issue'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all issues in the 'Review' stage under part 'PROD-456'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"Review\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"PROD-456\"\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'customer-XYZ' and create actionable tasks from the results.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"customer-XYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current sprint ID and add issues with severity 'medium' to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"medium\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all tasks similar to 'task-004' and create actionable tasks from the summary.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"task-004\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"What are the work items with severity 'high' and created by user 'DEVU-012'?",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEVU-012\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current user and return work items owned by that user with priority 'low'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"low\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'module-ABC' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"module-ABC\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all issues with severity 'blocker'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"blocker\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Meeting notes for project-789' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Meeting notes for project-789\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items in the 'Done' stage owned by the current user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"Done\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all issues in the 'Review' stage under part 'PROD-456'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"Review\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"PROD-456\"\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'customer-XYZ' and create actionable tasks from the results.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"customer-XYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current sprint ID and add issues with severity 'medium' to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"medium\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all tasks similar to 'task-004' and create actionable tasks from the summary.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"task-004\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"What are the work items with severity 'high' and created by user 'DEVU-012'?",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEVU-012\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current user and return work items owned by that user with priority 'low'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"low\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'module-ABC' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"module-ABC\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all issues with severity 'blocker'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"blocker\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Meeting notes for project-789' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Meeting notes for project-789\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items in the 'Done' stage owned by the current user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"Done\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items owned by 'DEVU-789' in the 'In Progress' stage with severity 'medium'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"In Progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"medium\"]\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'project-456' and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"project-456\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add tasks with priority 'low' to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"low\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all tasks similar to 'task-005' and create actionable tasks from the summary.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"task-005\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"What are the work items with severity 'high' and created by user 'DEVU-345'?",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEVU-345\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current user and return work items owned by that user with priority 'medium'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"medium\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'module-XYZ' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"module-XYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all issues with severity 'blocker'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"blocker\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Meeting notes for project-890' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Meeting notes for project-890\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items in the 'To Do' stage owned by the current user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"To Do\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks created by 'DEVU-567' in the 'Review' stage.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEVU-567\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"Review\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'customer-ABC' and create actionable tasks from the results.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"customer-ABC\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add tasks with priority 'high' to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"high\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all issues similar to 'issue-005' and create actionable tasks from the summary.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"issue-005\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"What are the work items with severity 'medium' and created by user 'DEVU-789'?",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"medium\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current user and return work items owned by that user with priority 'high'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"high\"]\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'module-DEF' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"module-DEF\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"tool_name\": \"sprint_id\",\r\n        \"arguments\": [\r\n          {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all tasks with priority 'medium'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"medium\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Meeting notes for project-ABC' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Meeting notes for project-ABC\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items in the 'To Do' stage owned by the current user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"To Do\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks with priority 'low' and created by 'DEVU-456' in the 'To Do' stage.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"low\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEVU-456\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"To Do\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'project-XYZ' and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"project-XYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add issues with severity 'low' to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"low\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all issues similar to 'issue-006' and create actionable tasks from the summary.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"issue-006\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"What are the work items with severity 'high' and created by user 'DEVU-123'?",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEVU-123\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'module-PQR' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"module-PQR\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"tool_name\": \"sprint_id\",\r\n        \"arguments\": [\r\n          {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all tasks with priority 'high'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"high\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Meeting notes for project-DEF' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Meeting notes for project-DEF\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items in the 'In Progress' stage owned by the current user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"In Progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve all work items related to 'ProjectX' with priority 'high' and owned by the current user, then summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": [\"ProjectX\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all tasks created by 'DEVU-789' with severity 'medium' and add them to the sprint with the lowest priority.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"medium\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[2]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Brainstorming ideas for ProjectY' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Brainstorming ideas for ProjectY\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'Pending Approval' stage and owned by 'DEVU-456'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"Pending Approval\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-456\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find the ID of the current user and return work items owned by that user with priority 'high' and in the 'In Progress' stage.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"In Progress\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'ModuleZ' and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ModuleZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all issues with priority 'blocker' and owned by 'DEVU-123'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"blocker\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-123\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Meeting outcomes for ProjectA' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Meeting outcomes for ProjectA\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items in the 'Review' stage related to 'ModuleB'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"Review\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": [\"ModuleB\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint and add issues with severity 'medium' and owned by 'DEVU-789' to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.severity\",\r\n        \"argument_value\": [\"medium\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks with priority 'high' that need a response, created by 'DEVU-456'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEVU-456\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'CustomerXYZ' and create actionable tasks from the information found.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerXYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all issues with severity 'blocker' from the customer 'UltimateClient'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"UltimateClient\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.severity\",\r\n        \"argument_value\": [\"blocker\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add tasks with priority 'medium' created by 'DEVU-789' to that sprint",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"medium\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all work items with priority 'p1' created by the current user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"p1\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Meeting minutes with ProjectA team' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Meeting minutes with ProjectA team\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current user and return work items owned by that user with priority 'low'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"low\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'ModuleXYZ' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ModuleXYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all tasks in the 'To Do' stage created by 'DEVU-123'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"To Do\"\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEVU-123\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find the ID of the current user and return all issues with severity 'high' owned by that user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.severity\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find the ID of the current user and return all tasks owned by that user with priority 'low' and in the 'In Progress' stage.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"low\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"In Progress\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all issues with severity 'medium' owned by 'DEVU-456' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.severity\",\r\n        \"argument_value\": [\"medium\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-456\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[2]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'ProjectZ' and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks with priority 'high' and owned by 'DEVU-123' in the 'To Do' stage.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-123\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"To Do\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint and add issues with severity 'low' owned by 'DEVU-789' to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.severity\",\r\n        \"argument_value\": [\"low\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Feedback session for ProjectB' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Feedback session for ProjectB\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"tool_name\": \"sprint_id\",\r\n        \"arguments\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find the ID of the current user and return all tasks with priority 'high' owned by that user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve all tasks with priority 'high' and owned by 'DEVU-456', then find similar work items and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-456\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all tasks created by 'DEVU-123' in the 'In Progress' stage and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEVU-123\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"In Progress\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[2]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items with priority 'p2' and owned by 'DEVU-789', then create issues from the summary.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"p2\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'ProjectC' and return their IDs, then prioritize those objects.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectC\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current user and return all tasks with priority 'medium' owned by that user in the 'To Do' stage.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"medium\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"To Do\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all issues with severity 'high' owned by 'DEVU-123' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.severity\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-123\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[2]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find the ID of the current user and return all tasks with priority 'low' and in the 'To Do' stage owned by that user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"low\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"To Do\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Release planning for ProjectX' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Release planning for ProjectX\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve all issues with severity 'low' and owned by 'DEVU-456', then create tasks from the information found",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.severity\",\r\n        \"argument_value\": [\"low\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-456\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all issues with severity 'blocker' and add them to the current sprint, then find similar work items.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.severity\",\r\n        \"argument_value\": [\"blocker\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find the ID of the current user and retrieve all tasks assigned to that user in the 'Completed' stage.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"Completed\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve all issues reported by customer 'CustomerX' and prioritize them based on severity.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerX\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all tasks with priority 'high' and owned by 'DEVU-789', then create issues from the summary.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find the ID of the current user and retrieve all tasks in the 'Backlog' stage assigned to that user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"Backlog\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all issues with severity 'medium' and owned by 'DEVU-456', then find similar work items.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.severity\",\r\n        \"argument_value\": [\"medium\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-456\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve all tasks with priority 'low' and owned by 'DEVU-123', then create actionable tasks from the summary.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"low\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-123\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve all tasks with priority 'p1' and created by 'DEVU-789', then summarize them and find similar work items.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"p1\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all issues with priority 'p0' and owned by 'DEVU-456', then prioritize them based on severity",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"p0\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-456\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'ProjectABC' and return their IDs, then create actionable tasks from the results.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectABC\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find the ID of the current user and retrieve all tasks in the 'In Progress' stage assigned to that user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"In Progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve all issues reported by customer 'CustomerY' and prioritize them based on severity.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerY\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all tasks with priority 'p2' and owned by 'DEVU-123', then create issues from the summary",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"p2\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-123\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find the ID of the current user and retrieve all tasks in the 'Backlog' stage owned by that user",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"Backlog\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all issues with severity 'medium' and owned by 'DEVU-456', then find similar work items.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.severity\",\r\n        \"argument_value\": [\"medium\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-456\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'ProjectDelta' and retrieve their IDs, then create actionable tasks from the results",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectDelta\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find the ID of the current user and retrieve all tasks in the 'Review' stage assigned to that user",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"Review\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'ModuleGamma' and summarize them, then create actionable tasks from the summary",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ModuleGamma\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve all tasks with priority 'p2' and owned by 'DEVU-456', then find similar work items",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"p2\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-456\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find the ID of the current user and retrieve all tasks in the 'In Progress' stage owned by that user",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"In Progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve all issues reported by customer 'CustomerX' and prioritize them based on severity.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerX\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'ProjectOmega' and return their IDs, then create actionable tasks from the results.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectOmega\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve all issues reported by customer 'CustomerZ' and prioritize them based on severity.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find the ID of the current user and retrieve all tasks in the 'In Review' stage owned by that user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"In Review\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all issues with severity 'low' and owned by 'DEVU-789', then find similar work items.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.severity\",\r\n        \"argument_value\": [\"low\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'ProjectAlpha' and return their IDs, then create issues from the results.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectAlpha\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find the ID of the current user and retrieve all tasks in the 'Completed' stage owned by that user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"Completed\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve all tasks with priority 'p1' and created by 'DEVU-123', then summarize them and find similar work items.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"p1\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEVU-123\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'ModuleDelta' and return their IDs, then prioritize them based on urgency.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ModuleDelta\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find the ID of the current user and retrieve all tasks in the 'On Hold' stage owned by that user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"On Hold\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks with priority 'low' and created by 'DEVU-456', then find similar work items.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"priority\",\r\n        \"argument_value\": [\"low\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEVU-456\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'development' stage created by DEVU-123",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"development\"\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEVU-123\"]\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find issues with priority 'p1' or 'p2' created by user DEVU-456",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p1\", \"p2\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEVU-456\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Part-XYZ' and summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Part-XYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Action items from meeting' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Action items from meeting\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current sprint ID and get similar work items to 'TKT-456'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-456\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks owned by user 'USR-789' in the 'To Do' stage.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"To Do\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"USR-789\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and summarize all issues with severity 'blocker'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"blocker\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Customer-A' and create actionable tasks from the results",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Customer-A\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks in the 'In Progress' stage owned by the current user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"In Progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find issues associated with Rev organization 'REV-456' and summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": [\"REV-456\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current user and retrieve similar work items to 'FEAT-789'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"FEAT-789\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Part-ABC' and prioritize them based on internal logic.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Part-ABC\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current sprint ID and add tasks with IDs 'TASK-1' and 'TASK-2' to the sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": [\"TASK-1\", \"TASK-2\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Action items from meeting with Team-X'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Action items from meeting with Team-X\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Project-A' and get the current user's ID.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Project-A\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current sprint ID and add issues with severity 'high' to the sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"high\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Action items from meeting with Team-Y' and get similar work items to 'TASK-789'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Action items from meeting with Team-Y\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TASK-789\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items owned by the current user and in the 'Review' stage.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"Review\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Customer-B' and prioritize them based on internal logic.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Customer-B\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current user and get similar work items to 'FEAT-987'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"FEAT-987\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Project-B' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Project-B\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user's ID and create actionable tasks from the text 'Action items from meeting with Team-Z'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Action items from meeting with Team-Z\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Customer-C' and get similar work items to 'TKT-987'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Customer-C\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-987\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and summarize all issues with severity 'medium'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"medium\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks in the 'Completed' stage owned by the current user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"Completed\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Part-XYZ' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Part-XYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current sprint ID and get similar work items to 'FEAT-111'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"FEAT-111\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all objects provided in the list of objects and create actionable tasks from the summary.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [{\"id\": \"obj-9\"}, {\"id\": \"obj-10\"}]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all issues with severity 'low' and associated with Rev organization 'REV-999'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"low\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": [\"REV-999\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks in the 'In Progress' stage with severity 'high' owned by users 'USR-777'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"In Progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"USR-777\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Project-C' and summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Project-C\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all issues with priority 'p1' associated with Rev organization 'REV-777'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p1\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": [\"REV-777\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Customer-E' and create actionable tasks from the results.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Customer-E\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current user and get similar work items to 'FEAT-333'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"FEAT-333\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Part-PQR' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Part-PQR\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user's ID and get similar work items to 'FEAT-444'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"FEAT-444\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all issues with severity 'blocker' associated with Rev organization 'REV-123'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"blocker\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": [\"REV-123\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Customer-A' and get similar work items to 'TKT-111'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Customer-A\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-111\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add issues with IDs 'ISSUE-5' and 'ISSUE-6' to the sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": [\"ISSUE-5\", \"ISSUE-6\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Project-D' and prioritize them based on internal logic.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Project-D\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current user and create actionable tasks from the text 'Action items from meeting with Team-Y'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Action items from meeting with Team-Y\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Part-ABC' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Part-ABC\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user's ID and get similar work items to 'FEAT-555'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"FEAT-555\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all issues with severity 'medium' and associated with Rev organization 'REV-888'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"medium\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": [\"REV-888\"]\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for all objects related to 'Client-X', get their IDs, and summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Client-X\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get similar work items to 'ISSUE-123' and prioritize them based on internal logic.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"ISSUE-123\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Project-F' and create actionable tasks from the text 'Action items from Project-F'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Project-F\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Action items from Project-F\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all issues with severity 'high' associated with Rev organization 'REV-555'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": [\"REV-555\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Part-XYZ' and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Part-XYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user's ID and get similar work items to 'FEAT-666'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"FEAT-666\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Customer-Z' and get similar work items to 'TKT-789'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": [\"ISSUE-9\", \"ISSUE-10\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks in the 'In Progress' stage owned by 'USR-999' with priority 'p3'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"In Progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"USR-999\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p3\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Project-G', get their IDs, and create actionable tasks from the text 'Action items from Project-G'",
        "output":"[\n  {\n    \"tool_name\": \"search_object_by_name\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"query\",\n        \"argument_value\": \"Project-G\"\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"create_actionable_tasks_from_text\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"text\",\n        \"argument_value\": \"Action items from Project-G\"\n      }\n    ]\n  }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all issues in the 'Review' stage under part 'PART-XYZ' owned by the current user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"Review\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"PART-XYZ\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current user and get similar work items to 'FEAT-777'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"FEAT-777\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all issues with severity 'low' associated with Rev organization 'REV-777'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"low\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": [\"REV-777\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Customer-A' and create actionable tasks from the text 'Action items from Customer-A'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Customer-A\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Action items from Customer-A\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks in the 'To Do' stage owned by 'USR-999' with priority 'p2'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"To Do\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"USR-999\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p2\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks in the 'In Progress' stage owned by 'USR-111' with priority 'p1'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"In Progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"USR-111\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p1\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Client-B' and get similar work items to 'TKT-999'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Client-B\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-999\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all issues with severity 'medium' associated with Rev organization 'REV-888'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"medium\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": [\"REV-888\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Project-H', get their IDs, and summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Project-H\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Client-C' and prioritize them based on internal logic.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Client-C\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks in the 'To Do' stage owned by 'USR-777' with priority 'p2'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"To Do\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"USR-777\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p2\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"\"Retrieve the ID of the current user and get similar work items to 'FEAT-888'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"FEAT-888\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"\"Search for objects related to 'Project-I', get their IDs, and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Project-I\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks in the 'In Progress' stage owned by 'USR-555' with priority 'p1'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"In Progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"USR-555\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p1\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Client-D' and get similar work items to 'TKT-555'.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Client-D\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-555\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all issues with severity 'high' associated with Rev organization 'REV-999'.",
        "output":"[\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"ticket.severity\",\n        \"argument_value\": [\"high\"]\n      },\n      {\n        \"argument_name\": \"ticket.rev_org\",\n        \"argument_value\": [\"REV-999\"]\n      }\n    ]\n  }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items with priority P1 and owned by user DEVU-456",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": \"p1\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"DEVU-456\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add work items with IDs ['FEAT-111', 'ENH-222'] to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"['FEAT-111', 'ENH-222']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all tasks similar to task_id 'TASK-789'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TASK-789\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find the Rev organizations associated with work items owned by user 'USER-987'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"USER-987\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to part 'PROD-567' created by users ['DEVU-001', 'DEVU-002']",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"PROD-567\"\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": \"['DEVU-001', 'DEVU-002']\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all high severity tickets associated with Rev organization 'REV-987' that need a response",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": \"['REV-987']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": \"high\"\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": \"true\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items of type 'task' in the 'in-progress' stage",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"in-progress\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the query 'Customer123' and prioritize them",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Customer123\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all issues created by the current user",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['issue']\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and list all work items assigned to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items similar to 'PROD-789', add them to the current sprint, and prioritize them",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_items\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"PROD-789\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[2]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items owned by the current user and summarize them",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of work items with severity 'blocker' assigned to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": \"blocker\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['ticket']\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the query 'ProjectX' and summarize them",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectX\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items in the 'testing' stage under part 'FEAT-456'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"testing\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"FEAT-456\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items similar to 'ENH-345', add them to the current sprint, and prioritize them",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_items\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"ENH-345\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[2]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items owned by the current user and add them to the current sprint",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[2]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all issues in the 'backlog' stage and prioritize them",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"backlog\"\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['issue']\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the query 'Client456' and create actionable tasks from them",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Client456\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'completed' stage under part 'PROD-789'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"completed\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"PROD-789\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items similar to 'TKT-567', add them to the current sprint, and prioritize them",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_items\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-567\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[2]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the query 'ProjectY' and add them to the current sprint",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectY\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items owned by the current user in the 'in-progress' stage",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"in-progress\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of tasks assigned to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Review feedback and incorporate changes'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Review feedback and incorporate changes\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the query 'Client789' and summarize them",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Client789\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'validation' stage under part 'ENH-789'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"validation\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"ENH-789\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all issues with severity 'medium' and prioritize them",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": \"medium\"\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['issue']\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and list all tasks assigned to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Discuss project updates in the team meeting'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Discuss project updates in the team meeting\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the query 'ProjectZ' and prioritize them",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'review' stage under part 'ENH-456'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"review\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"ENH-456\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items similar to 'FEAT-567', summarize them, and create tasks from that summary",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_items\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"FEAT-567\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all tasks owned by the current user",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'testing' stage under part 'PROD-012'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"testing\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"PROD-012\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Review customer feedback and incorporate changes'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Review customer feedback and incorporate changes\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the query 'Client111' and add them to the current sprint",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Client111\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize issues with priority 'p0' created by the current user",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": \"p0\"\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['issue']\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks owned by the current user in the 'in-review' stage",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"in-review\"\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all tasks in the 'pending' stage under part 'ENH-999'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"pending\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"ENH-999\"\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of issues assigned to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['issue']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Evaluate project risks and mitigation strategies'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Evaluate project risks and mitigation strategies\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the query 'ProjectA' and list all work items under it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectA\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'in-progress' stage under part 'FEAT-999'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"in-progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"FEAT-999\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items similar to 'PROD-789', summarize them, and prioritize them",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_items\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"PROD-789\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'completed' stage under part 'ENH-012'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"completed\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"ENH-012\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the query 'ClientXYZ' and prioritize them",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ClientXYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items similar to 'TKT-789', summarize them, and create issues from that summary",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_items\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-789\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of tasks assigned to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize issues with severity 'blocker' assigned to the current user",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": \"blocker\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['issue']\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of high priority tasks assigned to it",
        "output":"[\n  {\n    \"tool_name\": \"get_sprint_id\",\n    \"arguments\": []\n  },\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"type\",\n        \"argument_value\": \"['task']\"\n      },\n      {\n        \"argument_name\": \"issue.priority\",\n        \"argument_value\": \"['p0', 'p1']\"\n      },\n      {\n        \"argument_name\": \"sprint_id\",\n        \"argument_value\": \"$$PREV[0]\"\n      }\n    ]\n  }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Review and update project documentation'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Review and update project documentation\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the query 'ProjectXYZ' and list all work items under it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectXYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'completed' stage under part 'PROD-555'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"completed\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"PROD-555\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items similar to 'ENH-789', summarize them, and prioritize them",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_items\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"ENH-789\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'in-progress' stage under part 'TKT-123'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"in-progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"TKT-123\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items similar to 'PROD-123', summarize them, and create tasks from that summary",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_items\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"PROD-123\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of tasks assigned to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks owned by the current user in the 'in-progress' stage",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"in-progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of tasks assigned to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Review and update project documentation'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Review and update project documentation\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the query 'ProjectXYZ' and list all work items under it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectXYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'completed' stage under part 'PROD-555'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"completed\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"PROD-555\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items similar to 'ENH-789', summarize them, and prioritize them",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_items\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"ENH-789\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'in-progress' stage under part 'TKT-123'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"in-progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"TKT-123\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"et all work items similar to 'PROD-123', summarize them, and create tasks from that summary",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_items\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"PROD-123\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of tasks assigned to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks owned by the current user in the 'to-do' stage",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"to-do\"\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of tasks assigned to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Conduct client meeting for project X'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Conduct client meeting for project X\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the query 'ProjectABC' and list all work items under it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectABC\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'in-progress' stage under part 'ENH-789'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"in-progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"ENH-789\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items similar to 'TKT-456', summarize them, and prioritize them",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_items\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-456\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'completed' stage under part 'PROD-999'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"completed\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"PROD-999\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items similar to 'FEAT-555', summarize them, and create tasks from that summary",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_items\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"FEAT-555\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of tasks assigned to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks owned by the current user in the 'in-progress' stage",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"in-progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of tasks assigned to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Review and implement feature XYZ'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Review and implement feature XYZ\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the query 'ClientABC' and list all work items under it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ClientABC\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'in-progress' stage under part 'ENH-111'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"in-progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"ENH-111\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items similar to 'TKT-789', summarize them, and prioritize them",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_items\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-789\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'completed' stage under part 'PROD-333'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"completed\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"PROD-333\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items similar to 'FEAT-999', summarize them, and create tasks from that summary",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_items\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"FEAT-999\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of tasks assigned to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks owned by the current user in the 'in-progress' stage",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"in-progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of tasks assigned to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items similar to 'FEAT-789' and summarize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"FEAT-789\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"\"Prioritize objects from the list given.\"",
        "output":" [\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\r\n          {\r\n            \"id\": \"OBJ-123\",\r\n            \"type\": \"task\"\r\n          },\r\n          {\r\n            \"id\": \"OBJ-456\",\r\n            \"type\": \"issue\"\r\n          },\r\n          {\r\n            \"id\": \"OBJ-789\",\r\n            \"type\": \"ticket\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Add work items 'WORK-789' and 'WORK-890' to the sprint 'SPR-456'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": [\"WORK-789\", \"WORK-890\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"SPR-456\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for the object related to 'CustomerXYZ'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerXYZ\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from text data.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"This is a sample text containing actionable insights.\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items of type 'issue' and 'ticket'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\", \"ticket\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current user.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Filter for tasks that need a response.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items that need attention from Rev organization 'REV-789'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": [\"REV-789\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize objects of various types.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\r\n          {\r\n            \"id\": \"OBJ-123\",\r\n            \"type\": \"task\"\r\n          },\r\n          {\r\n            \"id\": \"OBJ-456\",\r\n            \"type\": \"issue\"\r\n          },\r\n          {\r\n            \"id\": \"OBJ-789\",\r\n            \"type\": \"ticket\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get work items similar to 'PROD-567' and add them to the current sprint.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"PROD-567\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items owned by user 'USR-456'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"USR-456\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items in the 'triage' stage related to part 'PART-890'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"triage\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": [\"PART-890\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve issues with 'high' severity and needing a response.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find similar work items to 'TKT-567' and create actionable tasks.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-567\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for an object related to 'CustomerABC'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerABC\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint and prioritize objects.",
        "output":" [\n  {\n    \"tool_name\": \"get_sprint_id\",\n    \"arguments\": []\n  },\n  {\n    \"tool_name\": \"prioritize_objects\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"objects\",\n        \"argument_value\": [\n          {\n            \"id\": \"OBJ-111\",\n            \"type\": \"task\"\n          },\n          {\n            \"id\": \"OBJ-222\",\n            \"type\": \"issue\"\n          }\n        ]\n      }\n    ]\n  }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get work items similar to 'ISS-789' and summarize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"ISS-789\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from a provided text sample and add them to the current sprint.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Sample text with actionable items.\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize objects 'OBJ-123' and 'OBJ-456'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\r\n          {\r\n            \"id\": \"OBJ-123\",\r\n            \"type\": \"issue\"\r\n          },\r\n          {\r\n            \"id\": \"OBJ-456\",\r\n            \"type\": \"task\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find similar work items to 'ISS-789' and prioritize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"ISS-789\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint and create actionable tasks from a given text.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Actionable items from text.\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get work items in the 'review' stage related to 'PART-890'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"review\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": [\"PART-890\"]\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'CustomerXYZ' and get their summaries.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerXYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items with severity 'blocker' and needing a response.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"blocker\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Prioritize objects 'OBJ-111' and 'OBJ-222'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\r\n          {\r\n            \"id\": \"OBJ-111\",\r\n            \"type\": \"task\"\r\n          },\r\n          {\r\n            \"id\": \"OBJ-222\",\r\n            \"type\": \"issue\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from given text and add them to the current sprint.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Actionable insights from text.\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get work items similar to 'TKT-999' and summarize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-999\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find similar work items to 'ISS-123' and prioritize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"ISS-123\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get objects related to 'CustomerABC' and summarize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerABC\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint and create tasks from text data.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Actionable tasks from provided text.\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items in the 'progress' stage related to 'PART-567'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"progress\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": [\"PART-567\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Cust-567' needing a response.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Cust-567\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Filter for tasks with severity 'high' and needing attention.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Prioritize objects 'OBJ-333' and 'OBJ-444'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\r\n          {\r\n            \"id\": \"OBJ-333\",\r\n            \"type\": \"issue\"\r\n          },\r\n          {\r\n            \"id\": \"OBJ-444\",\r\n            \"type\": \"task\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List tickets related to 'Cust-123' needing a response.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Cust-123\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"ticket\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from given text and add them to the current sprint.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Actionable items from provided text.\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get work items similar to 'TKT-789' and summarize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-789\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize objects 'OBJ-001' and 'OBJ-002'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\r\n          {\r\n            \"id\": \"OBJ-001\",\r\n            \"type\": \"issue\"\r\n          },\r\n          {\r\n            \"id\": \"OBJ-002\",\r\n            \"type\": \"task\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find similar work items to 'ISS-456' and prioritize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"ISS-456\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get objects related to 'CustomerXYZ' and summarize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerXYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint and create tasks from text data.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Actionable tasks from provided text.\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items in the 'progress' stage related to 'PART-890'",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"progress\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": [\"PART-890\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Cust-567' needing a response.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Cust-567\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Filter for tasks with severity 'high' and needing attention.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Prioritize objects 'OBJ-003' and 'OBJ-004'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\r\n          {\r\n            \"id\": \"OBJ-003\",\r\n            \"type\": \"issue\"\r\n          },\r\n          {\r\n            \"id\": \"OBJ-004\",\r\n            \"type\": \"task\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List tickets related to 'Cust-123' needing a respons.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Cust-123\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"ticket\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from given text and add them to the current sprint.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Actionable items from provided text.\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve objects 'OBJ-001' and 'OBJ-002' and summarize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\r\n          {\r\n            \"id\": \"OBJ-001\",\r\n            \"type\": \"issue\"\r\n          },\r\n          {\r\n            \"id\": \"OBJ-002\",\r\n            \"type\": \"task\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items similar to 'ISS-456' and prioritize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"ISS-456\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get objects related to 'CustomerXYZ' and summarize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerXYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint and create tasks from text data.\"",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Actionable tasks from provided text.\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items in the 'progress' stage related to 'PART-890'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"progress\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": [\"PART-890\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Cust-567' needing a response.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Cust-567\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Filter for tasks with severity 'high' and needing attention.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Prioritize objects 'OBJ-003' and 'OBJ-004.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\r\n          {\r\n            \"id\": \"OBJ-003\",\r\n            \"type\": \"issue\"\r\n          },\r\n          {\r\n            \"id\": \"OBJ-004\",\r\n            \"type\": \"task\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve issues similar to 'ISS-789' and summarize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"ISS-789\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tasks for 'CustomerXYZ' needing a response.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerXYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize objects 'OBJ-005' and 'OBJ-006'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\r\n          {\r\n            \"id\": \"OBJ-005\",\r\n            \"type\": \"issue\"\r\n          },\r\n          {\r\n            \"id\": \"OBJ-006\",\r\n            \"type\": \"task\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get work items in the 'development' stage for 'PART-567'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"development\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": [\"PART-567\"]\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Prioritize objects 'OBJ-007' and 'OBJ-008'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\r\n          {\r\n            \"id\": \"OBJ-007\",\r\n            \"type\": \"issue\"\r\n          },\r\n          {\r\n            \"id\": \"OBJ-008\",\r\n            \"type\": \"task\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tickets related to 'Cust-789' needing a response.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Cust-789\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"ticket\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create tasks from provided text and add them to the current sprint.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Actionable items from text.\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get similar work items to 'TKT-012' and summarize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-012\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve work items owned by me in 'review' stage.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"review\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items similar to 'TKT-999' and prioritize them.\"",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-999\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize tasks 'OBJ-009' and 'OBJ-010'.",
        "output":" [\n  {\n    \"tool_name\": \"summarize_objects\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"objects\",\n        \"argument_value\": [\n          {\n            \"id\": \"OBJ-009\",\n            \"type\": \"task\"\n          },\n          {\n            \"id\": \"OBJ-010\",\n            \"type\": \"task\"\n          }\n        ]\n      }\n    ]\n  }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve issues from 'CustomerABC' needing a response.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerABC\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tasks with severity 'blocker' needing attention",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"blocker\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Prioritize objects 'OBJ-011' and 'OBJ-012'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\r\n          {\r\n            \"id\": \"OBJ-011\",\r\n            \"type\": \"issue\"\r\n          },\r\n          {\r\n            \"id\": \"OBJ-012\",\r\n            \"type\": \"task\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tickets related to 'Cust-890' needing a response.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Cust-890\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"ticket\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get similar work items to 'TKT-111' and summarize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-111\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve work items owned by me in the 'review' stage.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"review\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Cust-999' needing a response.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Cust-999\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Query: \"Find similar items to 'PROD-001' and add them to the current sprint.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"PROD-001\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize objects 'ISS-001' and 'TKT-002'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\r\n          {\r\n            \"id\": \"ISS-001\",\r\n            \"type\": \"issue\"\r\n          },\r\n          {\r\n            \"id\": \"TKT-002\",\r\n            \"type\": \"ticket\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve tasks created by 'DEV-789' needing a response.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEV-789\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find high priority tasks needing a response.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Prioritize items 'TKT-003' and 'TKT-004'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\r\n          {\r\n            \"id\": \"TKT-003\",\r\n            \"type\": \"ticket\"\r\n          },\r\n          {\r\n            \"id\": \"TKT-004\",\r\n            \"type\": \"ticket\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for items related to 'CustomerXYZ' needing a response.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerXYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\", \"ticket\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get work items owned by 'USR-007' in the 'development' stage.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"development\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"USR-007\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Cust-001' needing a response.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Cust-001\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get similar work items to 'ISS-004' and add them to the current sprint.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"ISS-004\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\\\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize objects 'TASK-001' and 'TASK-002'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\r\n          {\r\n            \"id\": \"TASK-001\",\r\n            \"type\": \"task\"\r\n          },\r\n          {\r\n            \"id\": \"TASK-002\",\r\n            \"type\": \"task\"\r\n          }\r\n        ]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find tasks owned by 'USR-009' in the 'review' stage.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"review\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"USR-009\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for items related to 'Customer123' needing a response.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Customer123\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\", \"ticket\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from provided text 'Meeting Notes'.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Meeting Notes\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get work items owned by 'USR-004' in the 'development' stage.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"development\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"USR-004\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Cust-002' needing a response.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Cust-002\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get similar work items to 'ISS-005' and add them to the current sprint.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"ISS-005\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve work items created by 'DEV-007' needing a response.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEV-007\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Identify high priority work items created by 'DEV-005' and add them to the current sprint.\"",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEV-005\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p0\", \"p1\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\", \"ticket\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": [\"$$PREV[1]\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[2]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Cust-004' needing a response and summarize them.",
        "output":" [\n  {\n    \"tool_name\": \"search_object_by_name\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"query\",\n        \"argument_value\": \"Cust-004\"\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"ticket.needs_response\",\n        \"argument_value\": true\n      },\n      {\n        \"argument_name\": \"type\",\n        \"argument_value\": [\"issue\"]\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"summarize_objects\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"objects\",\n        \"argument_value\": [\"$$PREV[0]\"]\n      }\n    ]\n  }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve tasks owned by 'USR-011' in the 'development' stage and prioritize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"development\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"USR-011\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\"$$PREV[1]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find similar items to 'TKT-008' and create actionable tasks from the text.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-008\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Actionable insights from similar items.\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'CustomerABC' and get the ID of the current sprint.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerABC\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find high priority tasks needing a response and summarize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve issues created by 'DEV-012' needing a response and prioritize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEV-012\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find similar work items to 'ISS-009' and add them to the current sprint.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"ISS-009\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Cust-007' and summarize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Cust-007\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve tasks owned by 'USR-013' in the 'review' stage and prioritize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"review\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"USR-013\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"task\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\"$$PREV[1]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items similar to 'TASK-005' and add them to the sprint after summarizing",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TASK-005\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": [\"$$PREV[1]\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[2]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve high-priority issues assigned to 'USR-015' and add them to the current sprint.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p0\", \"p1\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"USR-015\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'CustomerX' requiring a response and summarize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerX\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\", \"ticket\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\"$$PREV[0]\", \"$$PREV[1]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Identify similar items to 'TKT-010' and create actionable tasks from the findings.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-010\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Actionable insights from similar items.\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve issues created by 'DEV-018' needing a response and prioritize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEV-018\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.needs_response\",\r\n        \"argument_value\": true\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": [\"issue\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": [\"$$PREV[0]\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to 'Cust-010' and retrieve the ID of the current sprint.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Cust-010\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find issues similar to 'TKT-456' and summarize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-456\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all high severity tickets associated with Rev organization 'REV-789' and prioritize them.",
        "output":" [\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": \"REV-789\"\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": \"high\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of tasks assigned to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Develop new feature ABC'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Develop new feature ABC\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the query 'ProjectXYZ' and list all work items under it",
        "output":"[\n  {\n    \"tool_name\": \"search_object_by_name\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"query\",\n        \"argument_value\": \"ProjectXYZ\"\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"works_list\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"applies_to_part\",\n        \"argument_value\": \"$$PREV[0]\"\n      }\n    ]\n  }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks in the 'backlog' stage assigned to the current user",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"backlog\"\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of issues assigned to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['issue']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Review and approve project proposal'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Review and approve project proposal\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the query 'ClientXYZ' and list all work items under it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ClientXYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'in-progress' stage under part 'ENH-222'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"in-progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"ENH-222\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items similar to 'TKT-111', summarize them, and prioritize them",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_items\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-111\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'completed' stage under part 'PROD-222'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"completed\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"PROD-222\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items similar to 'FEAT-222', summarize them, and create tasks from that summary",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_items\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"FEAT-222\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of tasks assigned to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks owned by the current user in the 'in-progress' stage",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"in-progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of tasks assigned to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Develop new feature XYZ'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Develop new feature XYZ\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the query 'ProjectABC' and list all work items under it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectABC\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'in-progress' stage under part 'ENH-333'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"in-progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"ENH-333\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items similar to 'TKT-333', summarize them, and prioritize them",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_items\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-333\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'completed' stage under part 'PROD-333'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"completed\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"PROD-333\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items similar to 'FEAT-333', summarize them, and create tasks from that summary",
        "output":"[\n  {\n    \"tool_name\": \"get_similar_work_items\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"work_id\",\n        \"argument_value\": \"FEAT-333\"\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"summarize_objects\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"objects\",\n        \"argument_value\": \"$$PREV[0]\"\n      }\n    ]\n  },\n  {\n    \"tool_name\": \"create_actionable_tasks_from_text\",\n    \"arguments\": [\n      {\n        \"argument_name\": \"text\",\n        \"argument_value\": \"$$PREV[1]\"\n      }\n    ]\n  }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of tasks assigned to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current user's ID and return a list of work items assigned to them",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all work items with priority 'p2' owned by the current user",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": \"p2\"\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'in-progress' stage under part 'FEAT-456'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"in-progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"FEAT-456\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Review and approve design proposal'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Review and approve design proposal\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items similar to 'TKT-987', summarize them, and prioritize them",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_items\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-987\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'completed' stage under part 'PROD-777'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"completed\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"PROD-777\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items similar to 'FEAT-123', summarize them, and create tasks from that summary",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_items\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"FEAT-123\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of tasks assigned to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks owned by the current user in the 'in-progress' stage",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"in-progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of tasks assigned to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text 'Develop new feature XYZ'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Develop new feature XYZ\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the query 'ClientXYZ' and list all work items under it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ClientXYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'in-progress' stage under part 'ENH-789'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"in-progress\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"ENH-789\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items similar to 'TKT-567', summarize them, and prioritize them",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_items\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TKT-567\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'completed' stage under part 'PROD-999'",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": \"completed\"\r\n      },\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": \"PROD-999\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get all work items similar to 'FEAT-456', summarize them, and create tasks from that summary",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_items\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"FEAT-456\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of tasks assigned to it",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"type\",\r\n        \"argument_value\": \"['task']\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items owned by user DEVU-456 with severity 'blocker' and add them to the current sprint.",
        "output":"[\n   {\n      \"tool_name\": \"works_list\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"owned_by\",\n            \"argument_value\": \"DEVU-456\"\n         },\n         {\n            \"argument_name\": \"ticket.severity\",\n            \"argument_value\": \"blocker\"\n         }\n      ]\n   },\n   {\n      \"tool_name\": \"get_sprint_id\",\n      \"arguments\": []\n   },\n   {\n      \"tool_name\": \"add_work_items_to_sprint\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"work_ids\",\n            \"argument_value\": \"$$PREV[0]\"\n         },\n         {\n            \"argument_name\": \"sprint_id\",\n            \"argument_value\": \"$$PREV[1]\"\n         }\n      ]\n   }\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items similar to 'PROD-789' and summarize them.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_similar_work_item\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_id\",\r\n            \"argument_value\": \"PROD-789\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for the object with the name 'CustomerXYZ' and list all work items associated with it.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"CustomerXYZ\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"ticket.rev_org\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all work items in the 'development' stage owned by user 'DEVU-789'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"stage.name\",\r\n            \"argument_value\": \"development\"\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"DEVU-789\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks and issues related to part 'FEAT-456' with severity 'high'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"applies_to_part\",\r\n            \"argument_value\": \"FEAT-456\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\", \"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": \"high\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items similar to 'TKT-987' and create actionable tasks from the summary.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_similar_work_item\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_id\",\r\n            \"argument_value\": \"TKT-987\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"create_actionable_tasks_from_text\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"text\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add all P1 issues owned by me to that sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p1\"\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[2]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize objects after prioritizing a list of tasks and issues.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": [\"task1\", \"issue2\", \"task3\"]\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'user123' and list all tasks with a 'Rev' organization.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"user123\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.rev_org\",\r\n            \"argument_value\": [\"Rev\"]\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Create actionable tasks from the text of the meeting transcript 'MeetingTranscript1' and add them to the current sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"create_actionable_tasks_from_text\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"text\",\r\n            \"argument_value\": \"MeetingTranscript1\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'testing' stage owned by 'QA-Team'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"stage.name\",\r\n            \"argument_value\": \"testing\"\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"QA-Team\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and prioritize P2 issues owned by me.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p2\"\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize objects after searching for 'Part123' and listing all tasks associated with it.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"Part123\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"applies_to_part\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items with severity 'medium' and source channel 'email'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": \"medium\"\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.source_channel\",\r\n            \"argument_value\": [\"email\"]\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'User-789' and list all issues with severity 'blocker'",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"User-789\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": [\"blocker\"]\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks owned by 'DEVU-789' and add them to the current sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"DEVU-789\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for 'PartXYZ' and summarize the associated work items.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"PartXYZ\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"applies_to_part\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get similar work items to 'FEAT-789', create tasks from the summary, and prioritize them",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_similar_work_item\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_id\",\r\n            \"argument_value\": \"FEAT-789\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"create_actionable_tasks_from_text\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"text\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks with priority 'high' and source channel 'web'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": [\"high\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.source_channel\",\r\n            \"argument_value\": [\"web\"]\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all objects after searching for 'CustomerABC' and listing tasks associated with it.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"CustomerABC\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'approval' stage owned by 'Manager-123'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"stage.name\",\r\n            \"argument_value\": \"approval\"\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"Manager-123\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add all tasks owned by me to that sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[2]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'TeamXYZ' and list all tasks and issues owned by user 'User-789'",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"TeamXYZ\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"User-789\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\", \"issue\"]\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize objects after finding work items similar to 'PROD-987' and prioritize them.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_similar_work_item\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_id\",\r\n            \"argument_value\": \"PROD-987\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": [\"task1\", \"issue2\", \"task3\"]\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks with priority 'low' and add them to the current sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"low\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'Customer-123' and list all issues with priority 'p2'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"Customer-123\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p2\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and prioritize P1 issues owned by 'Manager-456'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p1\"\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"Manager-456\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all issues with severity 'low' and source channel 'email'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": \"low\"\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.source_channel\",\r\n            \"argument_value\": [\"email\"]\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all objects after searching for 'ProjectABC' and listing tasks associated with it.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"ProjectABC\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'deployment' stage owned by 'OpsTeam-789'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"stage.name\",\r\n            \"argument_value\": \"deployment\"\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"OpsTeam-789\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add all tasks with priority 'p3' to that sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p3\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks and issues with severity 'medium' and source channel 'web'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\", \"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": \"medium\"\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.source_channel\",\r\n            \"argument_value\": [\"web\"]\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'TeamDelta' and summarize them.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"TeamDelta\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks with priority 'medium' and add them to the current sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"medium\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize issues similar to 'ENH-789' and create actionable tasks from the summary.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_similar_work_item\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_id\",\r\n            \"argument_value\": \"ENH-789\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"create_actionable_tasks_from_text\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"text\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks and issues with severity 'high' and source channel 'email'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\", \"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": \"high\"\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.source_channel\",\r\n            \"argument_value\": [\"email\"]\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'Customer-456' and prioritize P0 issues.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"Customer-456\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p0\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add all tasks with priority 'p1' to that sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p1\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize objects after searching for 'ProjectXYZ' and listing tasks associated with it.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"ProjectXYZ\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the 'review' stage owned by 'Lead-789'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"stage.name\",\r\n            \"argument_value\": \"review\"\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"Lead-789\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add all issues with priority 'p2' to that sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p2\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks and issues with severity 'low' and priority 'p3'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\", \"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": \"low\"\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p3\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize objects after searching for 'ProjectGamma' and listing tasks associated with it.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"ProjectGamma\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks and issues with severity 'medium' and source channel 'web'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\", \"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": \"medium\"\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.source_channel\",\r\n            \"argument_value\": [\"web\"]\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'TeamAlpha' and prioritize P1 issues.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"TeamAlpha\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p1\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add all tasks with priority 'p2' to that sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p2\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'Customer-789' and list all tasks owned by user 'User-123'.",
        "output":"[\n   {\n      \"tool_name\": \"search_object_by_name\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"query\",\n            \"argument_value\": \"Customer-789\"\n         }\n      ]\n   },\n   {\n      \"tool_name\": \"works_list\",\n      \"arguments\": [\n         {\n            \"argument_name\": \"owned_by\",\n            \"argument_value\": \"User-123\"\n         },\n         {\n            \"argument_name\": \"type\",\n            \"argument_value\": [\"task\"]\n         }\n      ]\n   }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all tasks and issues with severity 'high' owned by 'TeamDelta'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\", \"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": \"high\"\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"TeamDelta\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add all issues with priority 'p0' to that sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p0\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'Customer-789' and list all issues with priority 'p1'",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"Customer-789\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p1\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks with priority 'low' and source channel 'web'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"low\"\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.source_channel\",\r\n            \"argument_value\": [\"web\"]\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize objects after searching for 'ProjectAlpha' and listing tasks associated with it.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"ProjectAlpha\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add all tasks with priority 'p2' to that sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p2\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'TeamBeta' and prioritize P3 issues.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"TeamBeta\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p3\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all issues with priority 'p1' and source channel 'email'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p1\"\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.source_channel\",\r\n            \"argument_value\": [\"email\"]\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add all tasks with priority 'p3' to that sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p3\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'Customer-456' and list all tasks owned by user 'User-789'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"Customer-456\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"User-789\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize issues similar to 'ENH-456' and create actionable tasks from the summary.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_similar_work_item\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_id\",\r\n            \"argument_value\": \"ENH-456\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"create_actionable_tasks_from_text\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"text\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks with priority 'p0' and source channel 'slack'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p0\"\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.source_channel\",\r\n            \"argument_value\": [\"slack\"]\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add all issues with severity 'medium' to that sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": \"medium\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'ProjectBeta' and prioritize P2 issues.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"ProjectBeta\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p2\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'Client-ABC' and list all tasks owned by user 'User-XYZ'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"Client-ABC\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"User-XYZ\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         }\r\n      ]\r\n   }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add all issues with severity 'low' to that sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": \"low\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize objects after searching for 'ProjectDelta' and listing issues associated with it.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"ProjectDelta\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"issue\"]\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks and issues with severity 'medium' and source channel 'email'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\", \"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": \"medium\"\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.source_channel\",\r\n            \"argument_value\": [\"email\"]\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'Client-XYZ' and prioritize P2 issues.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"Client-XYZ\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p2\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'ProjectGamma' and list all issues with severity 'high'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"ProjectGamma\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": \"high\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks with priority 'p0' and source channel 'slack'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p0\"\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.source_channel\",\r\n            \"argument_value\": [\"slack\"]\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add all issues with severity 'high' to that sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": \"high\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'Customer-789' and list all tasks owned by user 'User-456'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"Customer-789\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"User-456\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize issues similar to 'ENH-789' and create actionable tasks from the summary.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_similar_work_item\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_id\",\r\n            \"argument_value\": \"ENH-789\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"create_actionable_tasks_from_text\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"text\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks with priority 'p1' and source channel 'web'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p1\"\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.source_channel\",\r\n            \"argument_value\": [\"web\"]\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add all issues with severity 'high' and 'low' to that sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": [\"high\", \"low\"]\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'ProjectTheta' and prioritize P1 issues.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"ProjectTheta\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p1\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items owned by 'User-789' and summarize them.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"User-789\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'Project-Alpha' and prioritize P1 issues.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"Project-Alpha\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p1\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize tasks with priority 'p2' and owned by 'User-123'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p2\"\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"User-123\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add all tasks owned by 'User-456' to that sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"User-456\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all issues with priority 'p3' and summarize them.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p3\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'Client-456' and prioritize P2 tasks.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"Client-456\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p2\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add all issues with severity 'low' to that sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": \"low\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'Project-Gamma' and list all tasks with priority 'p1'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"Project-Gamma\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p1\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize objects after searching for 'Customer-789' and listing tasks associated with it.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"Customer-789\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add all tasks with priority 'p3' to that sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p3\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'Project-Delta' and prioritize P2 issues.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"Project-Delta\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p2\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize tasks with priority 'p1' and owned by 'User-789'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p1\"\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"User-789\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add all issues with severity 'medium' to that sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": \"medium\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'Client-789' and list all tasks with priority 'p2'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"Client-789\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p2\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add all tasks with priority 'p1' to that sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p1\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks created by 'User-789' and summarize them.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"created_by\",\r\n            \"argument_value\": [\"User-789\"]\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'Project-Beta' and prioritize P3 issues.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"Project-Beta\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p3\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize issues with severity 'high' and owned by 'User-123'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": \"high\"\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"User-123\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add all tasks owned by 'User-456' to that sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"User-456\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all issues with priority 'p2' and summarize them.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p2\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'Client-456' and prioritize P1 tasks.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"Client-456\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p1\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add all issues with severity 'low' to that sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": \"low\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'Project-Gamma' and list all tasks with priority 'p1'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"Project-Gamma\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p1\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add all tasks with priority 'p3' to that sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p3\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'Project-Delta' and prioritize P2 issues.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"Project-Delta\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p2\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize tasks with priority 'p1' and owned by 'User-789'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p1\"\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"User-789\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and add all issues with severity 'medium' to that sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"issue\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": \"medium\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for work items related to 'Client-789' and list all tasks with priority 'p2'.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"Client-789\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": \"p2\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items owned by user \"DEVU-456\" with priority \"p1\" and summarize them.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": [\"DEVU-456\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"issue.priority\",\r\n            \"argument_value\": [\"p1\"]\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tickets associated with Rev organization \"REV-456\" and owned by user \"DEVU-789\"",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"ticket.rev_org\",\r\n            \"argument_value\": [\"REV-456\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": [\"DEVU-789\"]\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for an object with the query \"ImportantPart\" and create actionable tasks from the text.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"ImportantPart\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"create_actionable_tasks_from_text\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"text\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current user's ID and return the ID of the current sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"who_am_i\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items in the triage stage under part \"PROD-456\" and prioritize them.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"who_am_i\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"stage.name\",\r\n            \"argument_value\": [\"triage\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"applies_to_part\",\r\n            \"argument_value\": [\"PROD-456\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ImportantCustomer,\" list all tasks associated with them, and summarize the tasks.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"ImportantCustomer\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"applies_to_part\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Prioritize all work items in the current sprint and add them to a new sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[2]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all objects returned from a search for \"CriticalPart.\"",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"CriticalPart\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items owned by users \"DEVU-123\" and \"DEVU-456\" that need a response.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": [\"DEVU-123\", \"DEVU-456\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.needs_response\",\r\n            \"argument_value\": []\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of work items similar to \"TKT-789.\"",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"get_similar_work_item\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_id\",\r\n            \"argument_value\": \"TKT-789\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the \"design\" stage with severity \"medium\" and owned by the current user.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"who_am_i\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"stage.name\",\r\n            \"argument_value\": [\"design\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": [\"medium\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ProjectXYZ,\" get the Rev organizations associated with them, and return a list of work items for those Rev organizations.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"ProjectXYZ\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"ticket.rev_org\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all work items associated with part \"ENH-456\" and prioritize them.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"applies_to_part\",\r\n            \"argument_value\": [\"ENH-456\"]\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items of type \"task\" and create actionable tasks from their descriptions.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"create_actionable_tasks_from_text\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"text\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"CriticalComponent,\" get their IDs, and summarize them.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"CriticalComponent\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items associated with part \"PROD-789\" owned by the current user and in the \"testing\" stage.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"who_am_i\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"applies_to_part\",\r\n            \"argument_value\": [\"PROD-789\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"stage.name\",\r\n            \"argument_value\": [\"testing\"]\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current user's ID and return a list of work items with severity \"high\" created by that user.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"who_am_i\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": [\"high\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"created_by\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items associated with part \"FEAT-789\" and owned by user \"DEVU-789\" that need a response.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"applies_to_part\",\r\n            \"argument_value\": [\"FEAT-789\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": [\"DEVU-789\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.needs_response\",\r\n            \"argument_value\": []\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"CriticalTask,\" list all tasks associated with them, and create actionable tasks from their descriptions.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"CriticalTask\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"applies_to_part\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"create_actionable_tasks_from_text\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"text\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items associated with the current sprint, summarize them, and prioritize.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[2]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ImportantProject,\" get their Rev organizations, and list work items associated with those Rev organizations.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"ImportantProject\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"ticket.rev_org\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all high severity tickets owned by user \"DEVU-789\" that need a response.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": [\"high\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": [\"DEVU-789\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.needs_response\",\r\n            \"argument_value\": []\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint, find work items associated with it, and create actionable tasks from their descriptions.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"create_actionable_tasks_from_text\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"text\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"CriticalFeature,\" get their IDs, and prioritize them.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"CriticalFeature\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items owned by the current user with severity \"blocker\" and summarize them.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"who_am_i\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": [\"$$PREV[0]\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": [\"blocker\"]\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"summarize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items in the \"development\" stage owned by user \"DEVU-456\" and prioritize them.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"stage.name\",\r\n            \"argument_value\": [\"development\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": [\"DEVU-456\"]\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"prioritize_objects\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"objects\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"CriticalComponent,\" list all tasks associated with them, and add them to the current sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"CriticalComponent\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"type\",\r\n            \"argument_value\": [\"task\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"applies_to_part\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of work items similar to \"TKT-456.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"get_similar_work_item\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_id\",\r\n            \"argument_value\": \"TKT-456\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"CriticalProject,\" get their Rev organizations, and list work items for those Rev organizations\n",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"CriticalProject\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"ticket.rev_org\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items in the \"review\" stage with severity \"low\" owned by user \"DEVU-123.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"stage.name\",\r\n            \"argument_value\": [\"review\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": [\"low\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": [\"DEVU-123\"]\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items owned by the current user with severity \"medium\" and add them to a new sprint.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"who_am_i\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": [\"$$PREV[0]\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.severity\",\r\n            \"argument_value\": [\"medium\"]\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"add_work_items_to_sprint\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_ids\",\r\n            \"argument_value\": \"$$PREV[1]\"\r\n         },\r\n         {\r\n            \"argument_name\": \"sprint_id\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ProjectABC,\" get their Rev organizations, and return a list of work items for those Rev organizations.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"search_object_by_name\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"query\",\r\n            \"argument_value\": \"ProjectABC\"\r\n         }\r\n      ]\r\n   },\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"ticket.rev_org\",\r\n            \"argument_value\": \"$$PREV[0]\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of work items similar to \"TKT-789.\"",
        "output":"[\r\n   {\r\n      \"tool_name\": \"get_sprint_id\",\r\n      \"arguments\": []\r\n   },\r\n   {\r\n      \"tool_name\": \"get_similar_work_item\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"work_id\",\r\n            \"argument_value\": \"TKT-789\"\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items associated with part \"ENH-789\" owned by user \"DEVU-456\" that need a response.",
        "output":"[\r\n   {\r\n      \"tool_name\": \"works_list\",\r\n      \"arguments\": [\r\n         {\r\n            \"argument_name\": \"applies_to_part\",\r\n            \"argument_value\": [\"ENH-789\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"owned_by\",\r\n            \"argument_value\": [\"DEVU-456\"]\r\n         },\r\n         {\r\n            \"argument_name\": \"ticket.needs_response\",\r\n            \"argument_value\": []\r\n         }\r\n      ]\r\n   }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all work items with severity \"medium\" and owned by the current user.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"medium\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"CriticalTask,\" get their IDs, and prioritize them.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"CriticalTask\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"prioritize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the \"analysis\" stage with severity \"high\" and owned by user \"DEVU-789.\"",
        "output":"[\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"analysis\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"high\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": [\"DEVU-789\"]\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint, find work items associated with it, and add them to a new sprint.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"sprint_id\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"add_work_items_to_sprint\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_ids\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            },\r\n            {\r\n                \"tool_name\": \"get_sprint_id\",\r\n                \"arguments\": []\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ProjectX,\" get their Rev organizations, and list work items for those Rev organizations.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"ProjectX\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.rev_org\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all work items with severity \"low\" and in the \"development\" stage owned by user \"DEVU-456.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"low\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"development\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": [\"DEVU-456\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current user's ID and return a list of work items similar to \"TKT-789.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-789\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"CriticalComponent,\" get their IDs, and return a list of work items for those IDs.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"CriticalComponent\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"type\",\r\n                \"argument_value\": [\"issue\", \"ticket\", \"task\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items associated with part \"ENH-123\" owned by the current user that need a response.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": [\"ENH-123\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.needs_response\",\r\n                \"argument_value\": []\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current sprint ID and return a list of work items similar to \"TKT-456.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-456\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items associated with part \"PROD-789\" owned by the current user and in the \"testing\" stage.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": [\"PROD-789\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"testing\"]\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current user's ID and return a list of work items with severity \"high\" created by that user.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"high\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"created_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items associated with part \"FEAT-789\" and owned by user \"DEVU-789\" that need a response.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": [\"FEAT-789\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": [\"DEVU-789\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.needs_response\",\r\n                \"argument_value\": []\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"CriticalTask,\" list all tasks associated with them, and create actionable tasks from their descriptions.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"CriticalTask\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"type\",\r\n                \"argument_value\": [\"task\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"create_actionable_tasks_from_text\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"text\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of work items similar to \"TKT-123.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-123\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"CriticalTask,\" get their IDs, and summarize them.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"CriticalTask\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the \"design\" stage owned by user \"DEVU-456\" with severity \"medium.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"design\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": [\"DEVU-456\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"medium\"]\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint, find work items associated with it, and create actionable tasks from their descriptions.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"sprint_id\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"create_actionable_tasks_from_text\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"text\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ImportantFeature,\" get their IDs, and prioritize them.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"ImportantFeature\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"prioritize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items owned by the current user with severity \"blocker\" in the \"development\" stage.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": [\"$$PREV[0]\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"blocker\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"development\"]\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current user's ID and return a list of work items similar to \"TKT-456.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-456\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items associated with part \"ENH-456\" owned by user \"DEVU-789\" that need a response.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": [\"ENH-456\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": [\"DEVU-789\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.needs_response\",\r\n                \"argument_value\": []\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of work items similar to \"TKT-789.\"",
        "output":"[\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-789\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ProjectY,\" get their Rev organizations, and list work items for those Rev organizations.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"ProjectY\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.rev_org\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all work items with severity \"high\" and in the \"testing\" stage owned by user \"DEVU-456",
        "output":"[\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"high\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"testing\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": [\"DEVU-456\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current user's ID and return a list of work items with severity \"medium\" created by that user.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"medium\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"created_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items associated with part \"PROD-123\" and owned by user \"DEVU-123\" that need a response.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": [\"PROD-123\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": [\"DEVU-123\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.needs_response\",\r\n                \"argument_value\": []\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current sprint ID and return a list of work items similar to \"TKT-123.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-123\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the \"triage\" stage under part \"FEAT-456\" owned by the current user. Summarize them.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"triage\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": [\"FEAT-456\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"CriticalComponent,\" get their IDs, and return a list of work items for those IDs.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"CriticalComponent\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"type\",\r\n                \"argument_value\": [\"issue\", \"ticket\", \"task\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Get the current user's ID and return a list of work items similar to \"TKT-789.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-789\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the \"review\" stage under part \"ENH-456\" owned by the current user. Summarize them.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"review\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": [\"ENH-456\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Get the current sprint ID and return a list of work items similar to \"TKT-123.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-123\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the \"analysis\" stage owned by user \"DEVU-456\" with severity \"low.",
        "output":"[\n    {\n        \"tool_name\": \"works_list\",\n        \"arguments\": [\n            {\n                \"argument_name\": \"stage.name\",\n                \"argument_value\": [\"analysis\"]\n            },\n            {\n                \"argument_name\": \"owned_by\",\n                \"argument_value\": [\"DEVU-456\"]\n            },\n            {\n                \"argument_name\": \"ticket.severity\",\n                \"argument_value\": [\"low\"]\n            }\n        ]\n    }\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint, find work items associated with it, and add them to a new sprint.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"sprint_id\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"add_work_items_to_sprint\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_ids\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            },\r\n            {\r\n                \"tool_name\": \"get_sprint_id\",\r\n                \"arguments\": []\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ImportantFeature,\" get their IDs, and list work items for those IDs",
        "output":"[\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"ImportantFeature\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"type\",\r\n                \"argument_value\": [\"issue\", \"ticket\", \"task\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items associated with part \"PROD-789\" and owned by user \"DEVU-789\" that need a response.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": [\"PROD-789\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": [\"DEVU-789\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.needs_response\",\r\n                \"argument_value\": []\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items associated with part \"FEAT-789\" owned by the current user and in the \"testing\" stage.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": [\"FEAT-789\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"testing\"]\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current user's ID and return a list of work items with severity \"high\" created by that user.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"high\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"created_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"CriticalTask,\" list all tasks associated with them, and create actionable tasks from their descriptions.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"CriticalTask\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"type\",\r\n                \"argument_value\": [\"task\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"create_actionable_tasks_from_text\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"text\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of work items similar to \"TKT-123.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-123\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the \"triage\" stage under part \"FEAT-456\" owned by the current user. Summarize them.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"triage\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": [\"FEAT-456\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current user's ID and return a list of work items with severity \"medium\" created by that user.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"medium\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"created_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"CriticalComponent,\" get their IDs, and prioritize them.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"CriticalComponent\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"prioritize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items owned by the current user with severity \"blocker\" in the \"development\" stage.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": [\"$$PREV[0]\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"blocker\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"development\"]\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current user's ID and return a list of work items similar to \"TKT-456.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-456\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items associated with part \"ENH-789\" owned by user \"DEVU-123\" that need a response.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": [\"ENH-789\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": [\"DEVU-123\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.needs_response\",\r\n                \"argument_value\": []\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of work items similar to \"TKT-789.\"",
        "output":"[\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-789\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items associated with part \"PROD-456\" and owned by user \"DEVU-456\" that need a response.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": [\"PROD-456\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": [\"DEVU-456\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.needs_response\",\r\n                \"argument_value\": []\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current sprint ID and return a list of work items similar to \"TKT-123.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-123\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the \"triage\" stage under part \"FEAT-789\" owned by the current user. Summarize them.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"triage\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": [\"FEAT-789\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint and return a list of work items similar to \"TKT-456.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-456\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the \"design\" stage owned by user \"DEVU-789\" with severity \"medium.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"design\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": [\"DEVU-789\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"medium\"]\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint, find work items associated with it, and add them to a new sprint.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"sprint_id\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"add_work_items_to_sprint\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_ids\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"sprint_id\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ImportantFeature,\" get their IDs, and prioritize them.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"ImportantFeature\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"prioritize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current sprint ID and return a list of work items similar to \"TKT-789.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-789\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" List all work items in the \"analysis\" stage owned by user \"DEVU-456\" with severity \"low.\"",
        "output":"[\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"analysis\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": [\"DEVU-456\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"low\"]\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint, find work items associated with it, and create actionable tasks from their descriptions.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"sprint_id\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"create_actionable_tasks_from_text\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"text\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current user's ID and return a list of work items with severity \"high\" created by that user.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"high\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"created_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"CriticalTask,\" list all tasks associated with them, and create actionable tasks from their descriptions.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"CriticalTask\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"type\",\r\n                \"argument_value\": [\"task\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"create_actionable_tasks_from_text\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"text\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" List all work items in the \"triage\" stage under part \"FEAT-456\" owned by the current user. Summarize them.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"triage\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": [\"FEAT-456\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"CriticalComponent,\" get their IDs, and return a list of work items for those IDs.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"CriticalComponent\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"type\",\r\n                \"argument_value\": [\"issue\", \"ticket\", \"task\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current user's ID and return a list of work items with severity \"medium\" created by that user.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"who_am_i\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"medium\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"created_by\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the \"coding\" stage owned by user \"DEVU-123\" with severity \"high.\"",
        "output":"[\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"coding\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": [\"DEVU-123\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"high\"]\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint, find work items associated with it, and add them to a new sprint.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"sprint_id\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"add_work_items_to_sprint\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_ids\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            },\r\n            {\r\n                \"argument_name\": \"sprint_id\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items with severity \"blocker\" and in the \"development\" stage. Summarize them.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"blocker\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"development\"]\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"summarize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current sprint ID and return a list of work items similar to \"TKT-456.\"",
        "output":"[\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-456\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"CriticalTask,\" get their IDs, and prioritize them.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"search_object_by_name\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"query\",\r\n                \"argument_value\": \"CriticalTask\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"prioritize_objects\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"objects\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the current sprint ID and return a list of work items similar to \"TKT-123.\"",
        "output":"[\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"get_similar_work_item\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_id\",\r\n                \"argument_value\": \"TKT-123\"\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all work items in the \"analysis\" stage owned by user \"DEVU-456\" with severity \"low.\"",
        "output":"[\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"stage.name\",\r\n                \"argument_value\": [\"analysis\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": [\"DEVU-456\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.severity\",\r\n                \"argument_value\": [\"low\"]\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Get the ID of the current sprint, find work items associated with it, and add them to a new sprint.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"get_sprint_id\",\r\n        \"arguments\": []\r\n    },\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"sprint_id\",\r\n                \"argument_value\": \"$$PREV[0]\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"tool_name\": \"add_work_items_to_sprint\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"work_ids\",\r\n                \"argument_value\": \"$$PREV[1]\"\r\n            },\r\n            {\r\n                \"tool_name\": \"get_sprint_id\",\r\n                \"arguments\": []\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items associated with part \"PROD-789\" and owned by user \"DEVU-789\" that need a response.",
        "output":"[\r\n    {\r\n        \"tool_name\": \"works_list\",\r\n        \"arguments\": [\r\n            {\r\n                \"argument_name\": \"applies_to_part\",\r\n                \"argument_value\": [\"PROD-789\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"owned_by\",\r\n                \"argument_value\": [\"DEVU-789\"]\r\n            },\r\n            {\r\n                \"argument_name\": \"ticket.needs_response\",\r\n                \"argument_value\": []\r\n            }\r\n        ]\r\n    }\r\n]",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all tasks related to part \"PROD-789\" created by user \"DEVU-456\".",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": [\"PROD-789\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEVU-456\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to the query \"Customer123\", retrieve the associated work items, and summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"Customer123\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.rev_org\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user ID and list all work items owned by that user in the \"triage\" stage. Summarize the results.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"triage\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Given a text \"MeetingNotes\", create actionable tasks from the text, retrieve the current sprint ID, and add the tasks to the sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"MeetingNotes\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint and list all work items associated with that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find all work items similar to \"ISSUE-789\" and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"ISSUE-789\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ProjectX,\" retrieve the work items, and create actionable tasks from the summary.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectX\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[2]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks in the \"In Progress\" stage, owned by the current user, and summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"In Progress\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user ID and create actionable tasks from a given text \"Project Update.\"",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Project Update\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks owned by \"DEVU-789\" with a severity of \"blocker\" and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"blocker\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint and add all tasks owned by the current user to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all tasks associated with part \"CAPL-456\" and owned by user \"DEVU-789.\"",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": [\"CAPL-456\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"CustomerABC,\" retrieve the work items, and summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerABC\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" List all tasks with priority \"p2\" and owned by \"DEVU-789,\" then prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p2\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current sprint ID and add all tasks with severity \"high\" to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"high\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint and list all tasks associated with that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all tasks in the \"backlog\" stage owned by \"DEVU-789.\"",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"backlog\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint and add all tasks with priority \"p0\" to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p0\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ProjectY,\" retrieve the work items, and create actionable tasks from the summary.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectY\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[2]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Retrieve the ID of the current sprint and list all tasks with severity \"medium\" associated with that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"medium\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks created by \"DEVU-789\" and add them to the current sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"created_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items similar to \"TASK-456\" and create actionable tasks from the summary.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"TASK-456\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user ID and list all tasks in the \"completed\" stage owned by that user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"completed\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks associated with part \"ENH-789\" and owned by \"DEVU-456,\" then prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"applies_to_part\",\r\n        \"argument_value\": [\"ENH-789\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-456\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ProjectZ,\" retrieve the work items, and summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint and add all tasks with priority \"p1\" to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p1\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks with severity \"low\" and owned by the current user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"low\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Summarize all tasks in the \"triage\" stage with severity \"high\" owned by \"DEVU-123.\"",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"triage\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-123\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current sprint ID and add all tasks with severity \"medium\" and \"low\" to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"medium\", \"low\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint and list all tasks with severity \"high\" owned by \"DEVU-456.\"",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-456\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"CustomerXYZ,\" retrieve the work items, and summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerXYZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user ID and create actionable tasks from a given text \"Weekly Update.\"",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Weekly Update\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks in the \"pending\" stage with priority \"p1\" owned by \"DEVU-789\" and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"pending\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p1\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user ID and list all tasks in the \"in-progress\" stage owned by that user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"in-progress\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Find work items similar to \"ENH-456\" and summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_similar_work_item\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_id\",\r\n        \"argument_value\": \"ENH-456\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint and list all tasks associated with that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks in the \"backlog\" stage with severity \"blocker\" owned by \"DEVU-456.\"",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"backlog\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"blocker\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-456\"]\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ProjectA,\" retrieve the work items, and create actionable tasks from the summary.\r\n\r",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectA\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[2]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user ID and list all tasks with priority \"p2\" owned by that user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p2\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks with severity \"medium\" and \"high\" owned by \"DEVU-789\" and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"medium\", \"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all tasks in the \"to-do\" stage owned by \"DEVU-123.\"",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"to-do\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-123\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current sprint ID and list all tasks with severity \"low\" associated with that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"low\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"CustomerB,\" retrieve the work items, and create actionable tasks from the summary.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerB\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[2]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"CustomerB,\" retrieve the work items, and create actionable tasks from the summary.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerB\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[2]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user ID and list all tasks with severity \"blocker\" owned by that user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"blocker\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user ID and list all tasks in the \"review\" stage owned by that user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"review\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Retrieve the current sprint ID and list all tasks with severity \"medium\" owned by \"DEVU-123\" and add them to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"medium\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-123\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Summarize all tasks with priority \"p0\" and owned by \"DEVU-789.\"",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p0\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint and list all tasks in the \"completed\" stage associated with that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"completed\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ProjectX,\" retrieve the work items, and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectX\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user ID and list all tasks with priority \"p1\" owned by that user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p1\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" List all tasks with severity \"high\" and \"medium\" owned by \"DEVU-456\" and summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"high\", \"medium\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-456\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint and add all tasks with severity \"blocker\" and \"critical\" to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"blocker\", \"critical\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user ID and create actionable tasks from a given text \"Monthly Report.\"",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Monthly Report\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks in the \"review\" stage with priority \"p2\" owned by \"DEVU-789\" and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"review\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p2\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Retrieve the current user ID and list all tasks in the \"in-progress\" stage owned by that user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"in-progress\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ClientA,\" retrieve the work items, and create actionable tasks from the summary.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ClientA\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[2]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint and list all tasks in the \"to-do\" stage associated with that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"to-do\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks in the \"pending\" stage with severity \"medium\" owned by \"DEVU-123\" and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"pending\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"medium\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-123\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint and add all tasks with priority \"p0\" owned by \"DEVU-789\" to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p0\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Search for objects related to \"ProjectY,\" retrieve the work items, and summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectY\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks in the \"pending\" stage with severity \"low\" owned by \"DEVU-456\" and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"pending\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"low\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-456\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint and list all tasks in the \"in-progress\" stage associated with that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"in-progress\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks with severity \"blocker\" and \"critical\" owned by \"DEVU-123\" and summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"blocker\", \"critical\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-123\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user ID and list all tasks in the \"backlog\" stage owned by that user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"backlog\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r\n",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ClientB,\" retrieve the work items, and create actionable tasks from the summary.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ClientB\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[2]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current sprint ID and add all tasks with severity \"high\" owned by \"DEVU-456\" to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-456\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user ID and list all tasks with priority \"p2\" owned by that user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p2\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint and list all tasks in the \"completed\" stage associated with that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"completed\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks in the \"triage\" stage with severity \"medium\" owned by \"DEVU-789\" and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"triage\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"medium\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user ID and create actionable tasks from a given text \"Weekly Meeting Notes.\"",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Weekly Meeting Notes\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks with priority \"p1\" owned by \"DEVU-456\" and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p1\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-456\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ProjectZ,\" retrieve the work items, and summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectZ\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current sprint ID and add all tasks with severity \"low\" owned by \"DEVU-123\" to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"low\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-123\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user ID and list all tasks with severity \"medium\" owned by that user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"medium\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"CustomerX,\" retrieve the work items, and create actionable tasks from the summary.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"CustomerX\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n  \"arguments\": [\r\n    {\r\n      \"argument_name\": \"owned_by\",\r\n      \"argument_value\": \"$$PREV[0]\"\r\n    }\r\n  ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"$$PREV[2]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint and list all tasks in the \"pending\" stage associated with that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"pending\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks in the \"review\" stage with severity \"high\" owned by \"DEVU-789\" and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"review\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"high\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user ID and list all tasks with priority \"p0\" owned by that user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p0\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ProjectA,\" retrieve the work items, and summarize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ProjectA\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"summarize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current sprint ID and add all tasks with severity \"medium\" owned by \"DEVU-456\" to that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"medium\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-456\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"add_work_items_to_sprint\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"work_ids\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":" Retrieve the current user ID and create actionable tasks from a given text \"Monthly Report Update.\"",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"create_actionable_tasks_from_text\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"text\",\r\n        \"argument_value\": \"Monthly Report Update\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the ID of the current sprint and list all tasks in the \"ready for testing\" stage associated with that sprint.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"get_sprint_id\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"ready for testing\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"sprint_id\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Search for objects related to \"ClientB,\" retrieve the work items, and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"search_object_by_name\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"query\",\r\n        \"argument_value\": \"ClientB\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[1]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"Retrieve the current user ID and list all tasks with severity \"low\" owned by that user.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"who_am_i\",\r\n    \"arguments\": []\r\n  },\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"ticket.severity\",\r\n        \"argument_value\": [\"low\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    },
    {
        "instruction":"List all tasks in the \"completed\" stage with priority \"p1\" owned by \"DEVU-789\" and prioritize them.",
        "output":"[\r\n  {\r\n    \"tool_name\": \"works_list\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"stage.name\",\r\n        \"argument_value\": [\"completed\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"issue.priority\",\r\n        \"argument_value\": [\"p1\"]\r\n      },\r\n      {\r\n        \"argument_name\": \"owned_by\",\r\n        \"argument_value\": [\"DEVU-789\"]\r\n      }\r\n    ]\r\n  },\r\n  {\r\n    \"tool_name\": \"prioritize_objects\",\r\n    \"arguments\": [\r\n      {\r\n        \"argument_name\": \"objects\",\r\n        \"argument_value\": \"$$PREV[0]\"\r\n      }\r\n    ]\r\n  }\r\n]\r",
        "input":"You are an AI assistant designed to help developers in their day to day tasks by automating their requests using tools available to them.\n\nThe actions defined in this domain are:\n\nThe works_list action: Returns a list of work items matching the request. It has the following parameters: \n\tapplies_to_part: Filters for work belonging to any of the provided parts.\n\tcreated_by: Filters for work created by any of these users.\n\tissue.priority: Filters for issues with any of the provided priorities. Allowed values: p0, p1, p2, p3.\n\tissue.rev_orgs: Filters for issues with any of the provided Rev organizations.\n\tlimit: The maximum number of works to return. The default is '50'.\n\towned_by: Filters for work owned by any of these users.\n\tstage.name: Filters for records in the provided stage(s) by name.\n\tticket.needs_response: Filters for tickets that need a response.\n\tticket.rev_org: Filters for tickets associated with any of the provided Rev organizations.\n\tticket.severity: Filters for tickets with any of the provided severities. Allowed values: blocker, high, low, medium.\n\tticket.source_channel: Filters for tickets with any of the provided source channels.\n\ttype: Filters for work of the provided types. Allowed values: issue, ticket, task.\n\n\nThe summarize_objects action: Summarizes a list of objects. The logic of how to summarize a particular object type is an internal implementation detail. It has the following parameters: \n\tobjects: List of objects to summarize.\n\n\nThe prioritize_objects action: Returns a list of objects sorted by priority. The logic of what constitutes priority for a given object is an internal implementation detail. It has the following parameters: \n\tobjects: A list of objects to be prioritized.\n\n\nThe add_work_items_to_sprint action: Adds the given work items to the sprint. It has the following parameters: \n\twork_ids: A list of work item IDs to be added to the sprint.\n\tsprint_id: The ID of the sprint to which the work items should be added.\n\n\nThe get_sprint_id action: Returns the ID of the current sprint. It has no parameters. \n\nThe get_similar_work_items action: Returns a list of work items that are similar to the given work item. It has the following parameters: \n\twork_id: The ID of the work item for which you want to find similar items.\n\n\nThe search_object_by_name action: Given a search string, returns the ID of a matching object in the system of record. If multiple matches are found, it returns the one where the confidence is highest. It has the following parameters: \n\tquery: The search string, could be for example customer\u2019s name, part name, user name.\n\n\nThe create_actionable_tasks_from_text action: Given a text, extracts actionable insights, and creates tasks for them, which are kind of a work item. It has the following parameters: \n\ttext: The text from which the actionable insights need to be created.\n\n\nThe who_am_i action: Returns the ID of the current user. It has no parameters. \n",
        "data_source":""
    }
]